{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4776fc4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "from sqlalchemy import create_engine\n",
    "%matplotlib inline "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2ccce519",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>00:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592792</td>\n",
       "      <td>2595706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592804</td>\n",
       "      <td>2595713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592816</td>\n",
       "      <td>2595729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>12:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592870</td>\n",
       "      <td>2595762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592992</td>\n",
       "      <td>2595791</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    C/A  UNIT       SCP STATION LINENAME DIVISION        DATE      TIME  \\\n",
       "0  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  00:00:00   \n",
       "1  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  04:00:00   \n",
       "2  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  08:00:00   \n",
       "3  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  12:00:00   \n",
       "4  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  16:00:00   \n",
       "\n",
       "      DESC  ENTRIES  \\\n",
       "0  REGULAR  7592792   \n",
       "1  REGULAR  7592804   \n",
       "2  REGULAR  7592816   \n",
       "3  REGULAR  7592870   \n",
       "4  REGULAR  7592992   \n",
       "\n",
       "   EXITS                                                                 \n",
       "0                                            2595706                     \n",
       "1                                            2595713                     \n",
       "2                                            2595729                     \n",
       "3                                            2595762                     \n",
       "4                                            2595791                     "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "dates=[210710,210717,210724,210731,210807,210814,210821,210828,210904,210911,210918,210925,211002]\n",
    "df=pd.read_csv('http://web.mta.info/developers/data/nyct/turnstile/turnstile_210703.txt')\n",
    "for i in dates:\n",
    "    temp= pd.read_csv(f\"http://web.mta.info/developers/data/nyct/turnstile/turnstile_{i}.txt\")\n",
    "    df= pd.concat([df, temp])\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bafdbfa6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#engine = create_engine(\"sqlite:///my_database.db\")\n",
    "#df.to_sql('MTAdata',engine,if_exists='replace',index=False )\n",
    "#all_tables= engine.table_names()\n",
    "#print(all_tables)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5905c383",
   "metadata": {},
   "outputs": [],
   "source": [
    "#dd=pd.read_sql('select * from MTAdata limit 10;',engine)\n",
    "#dd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "109e5937",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['C/A', 'UNIT', 'SCP', 'STATION', 'LINENAME', 'DIVISION', 'DATE', 'TIME',\n",
       "       'DESC', 'ENTRIES', 'EXITS'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns = [column.strip() for column in df.columns]\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "94b6ff43",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"DATE_TIME\"] = pd.to_datetime(df.DATE + \" \" + df.TIME, \n",
    "     format=\"%m/%d/%Y %H:%M:%S\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b712909e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['DATE'] = pd.to_datetime(df['DATE'])\n",
    "df['DAY'] = df['DATE'].dt.day_name()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "44fcd169",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>00:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592792</td>\n",
       "      <td>2595706</td>\n",
       "      <td>2021-06-26 00:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592804</td>\n",
       "      <td>2595713</td>\n",
       "      <td>2021-06-26 04:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592816</td>\n",
       "      <td>2595729</td>\n",
       "      <td>2021-06-26 08:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>12:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592870</td>\n",
       "      <td>2595762</td>\n",
       "      <td>2021-06-26 12:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592992</td>\n",
       "      <td>2595791</td>\n",
       "      <td>2021-06-26 16:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    C/A  UNIT       SCP STATION LINENAME DIVISION       DATE      TIME  \\\n",
       "0  A002  R051  02-00-00   59 ST  NQR456W      BMT 2021-06-26  00:00:00   \n",
       "1  A002  R051  02-00-00   59 ST  NQR456W      BMT 2021-06-26  04:00:00   \n",
       "2  A002  R051  02-00-00   59 ST  NQR456W      BMT 2021-06-26  08:00:00   \n",
       "3  A002  R051  02-00-00   59 ST  NQR456W      BMT 2021-06-26  12:00:00   \n",
       "4  A002  R051  02-00-00   59 ST  NQR456W      BMT 2021-06-26  16:00:00   \n",
       "\n",
       "      DESC  ENTRIES    EXITS           DATE_TIME       DAY  \n",
       "0  REGULAR  7592792  2595706 2021-06-26 00:00:00  Saturday  \n",
       "1  REGULAR  7592804  2595713 2021-06-26 04:00:00  Saturday  \n",
       "2  REGULAR  7592816  2595729 2021-06-26 08:00:00  Saturday  \n",
       "3  REGULAR  7592870  2595762 2021-06-26 12:00:00  Saturday  \n",
       "4  REGULAR  7592992  2595791 2021-06-26 16:00:00  Saturday  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "86197eb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>130226</th>\n",
       "      <td>R101</td>\n",
       "      <td>R001</td>\n",
       "      <td>02-03-00</td>\n",
       "      <td>SOUTH FERRY</td>\n",
       "      <td>1RW</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-08-28</td>\n",
       "      <td>05:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>221945</td>\n",
       "      <td>208376</td>\n",
       "      <td>2021-08-28 05:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46280</th>\n",
       "      <td>N009</td>\n",
       "      <td>R174</td>\n",
       "      <td>01-00-02</td>\n",
       "      <td>181 ST</td>\n",
       "      <td>A</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-08-23</td>\n",
       "      <td>17:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>1610379045</td>\n",
       "      <td>134768689</td>\n",
       "      <td>2021-08-23 17:00:00</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66188</th>\n",
       "      <td>N108</td>\n",
       "      <td>R217</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>HOYT-SCHER</td>\n",
       "      <td>ACG</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-08-26</td>\n",
       "      <td>00:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>2595906</td>\n",
       "      <td>2348161</td>\n",
       "      <td>2021-08-26 00:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174881</th>\n",
       "      <td>R307</td>\n",
       "      <td>R207</td>\n",
       "      <td>01-00-01</td>\n",
       "      <td>135 ST</td>\n",
       "      <td>23</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-08-22</td>\n",
       "      <td>00:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>832703</td>\n",
       "      <td>637119</td>\n",
       "      <td>2021-08-22 00:00:00</td>\n",
       "      <td>Sunday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22839</th>\n",
       "      <td>C017</td>\n",
       "      <td>R455</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>25 ST</td>\n",
       "      <td>R</td>\n",
       "      <td>BMT</td>\n",
       "      <td>2021-07-24</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>669590</td>\n",
       "      <td>6810245</td>\n",
       "      <td>2021-07-24 04:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39434</th>\n",
       "      <td>JFK03</td>\n",
       "      <td>R536</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>JFK JAMAICA CT1</td>\n",
       "      <td>E</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-08-27</td>\n",
       "      <td>05:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>37521</td>\n",
       "      <td>434657</td>\n",
       "      <td>2021-08-27 05:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166190</th>\n",
       "      <td>R246</td>\n",
       "      <td>R177</td>\n",
       "      <td>00-00-04</td>\n",
       "      <td>68ST-HUNTER CO</td>\n",
       "      <td>6</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-08-12</td>\n",
       "      <td>13:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>5449159</td>\n",
       "      <td>3518550</td>\n",
       "      <td>2021-08-12 13:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76485</th>\n",
       "      <td>N209</td>\n",
       "      <td>R443</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>170 ST</td>\n",
       "      <td>BD</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-07-31</td>\n",
       "      <td>09:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>4326008</td>\n",
       "      <td>2323279</td>\n",
       "      <td>2021-07-31 09:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151741</th>\n",
       "      <td>R201</td>\n",
       "      <td>R041</td>\n",
       "      <td>00-00-01</td>\n",
       "      <td>BOWLING GREEN</td>\n",
       "      <td>45</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-08-02</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>1691078</td>\n",
       "      <td>942338</td>\n",
       "      <td>2021-08-02 08:00:00</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135859</th>\n",
       "      <td>R121</td>\n",
       "      <td>R290</td>\n",
       "      <td>01-05-00</td>\n",
       "      <td>HOUSTON ST</td>\n",
       "      <td>1</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-07-27</td>\n",
       "      <td>01:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>319</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-07-27 01:00:00</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156140</th>\n",
       "      <td>R217A</td>\n",
       "      <td>R194</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>BLEECKER ST</td>\n",
       "      <td>6DF</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-09-15</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>4721169</td>\n",
       "      <td>907548</td>\n",
       "      <td>2021-09-15 04:00:00</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79054</th>\n",
       "      <td>N225</td>\n",
       "      <td>R157</td>\n",
       "      <td>01-00-02</td>\n",
       "      <td>NORWOOD 205 ST</td>\n",
       "      <td>D</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>01:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>76293</td>\n",
       "      <td>68546</td>\n",
       "      <td>2021-10-01 01:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104956</th>\n",
       "      <td>N525</td>\n",
       "      <td>R142</td>\n",
       "      <td>01-00-02</td>\n",
       "      <td>DELANCEY/ESSEX</td>\n",
       "      <td>FJMZ</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-09-13</td>\n",
       "      <td>01:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>8781357</td>\n",
       "      <td>7905878</td>\n",
       "      <td>2021-09-13 01:00:00</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21168</th>\n",
       "      <td>C008</td>\n",
       "      <td>R099</td>\n",
       "      <td>00-06-03</td>\n",
       "      <td>DEKALB AV</td>\n",
       "      <td>BDNQR</td>\n",
       "      <td>BMT</td>\n",
       "      <td>2021-08-18</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>418547</td>\n",
       "      <td>143293</td>\n",
       "      <td>2021-08-18 16:00:00</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48337</th>\n",
       "      <td>N020</td>\n",
       "      <td>R101</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>145 ST</td>\n",
       "      <td>ABCD</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-08-24</td>\n",
       "      <td>17:55:25</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>12017178</td>\n",
       "      <td>12606883</td>\n",
       "      <td>2021-08-24 17:55:25</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193144</th>\n",
       "      <td>R532</td>\n",
       "      <td>R328</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>METS-WILLETS PT</td>\n",
       "      <td>7</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-08-30</td>\n",
       "      <td>05:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>1448702</td>\n",
       "      <td>120714</td>\n",
       "      <td>2021-08-30 05:00:00</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184583</th>\n",
       "      <td>R423</td>\n",
       "      <td>R429</td>\n",
       "      <td>00-05-00</td>\n",
       "      <td>PELHAM BAY PARK</td>\n",
       "      <td>6</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-08-29</td>\n",
       "      <td>20:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>150997191</td>\n",
       "      <td>0</td>\n",
       "      <td>2021-08-29 20:00:00</td>\n",
       "      <td>Sunday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173983</th>\n",
       "      <td>R302</td>\n",
       "      <td>R324</td>\n",
       "      <td>01-00-02</td>\n",
       "      <td>116 ST</td>\n",
       "      <td>23</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-07-15</td>\n",
       "      <td>05:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>8489599</td>\n",
       "      <td>1541071</td>\n",
       "      <td>2021-07-15 05:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179168</th>\n",
       "      <td>R329</td>\n",
       "      <td>R362</td>\n",
       "      <td>00-00-01</td>\n",
       "      <td>ALLERTON AV</td>\n",
       "      <td>25</td>\n",
       "      <td>IRT</td>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>09:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>19787354</td>\n",
       "      <td>1214654</td>\n",
       "      <td>2021-09-24 09:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98134</th>\n",
       "      <td>N500</td>\n",
       "      <td>R020</td>\n",
       "      <td>00-03-01</td>\n",
       "      <td>47-50 STS ROCK</td>\n",
       "      <td>BDFM</td>\n",
       "      <td>IND</td>\n",
       "      <td>2021-09-25</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>8024920</td>\n",
       "      <td>4183723</td>\n",
       "      <td>2021-09-25 04:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A  UNIT       SCP          STATION LINENAME DIVISION       DATE  \\\n",
       "130226   R101  R001  02-03-00      SOUTH FERRY      1RW      IRT 2021-08-28   \n",
       "46280    N009  R174  01-00-02           181 ST        A      IND 2021-08-23   \n",
       "66188    N108  R217  00-00-02       HOYT-SCHER      ACG      IND 2021-08-26   \n",
       "174881   R307  R207  01-00-01           135 ST       23      IRT 2021-08-22   \n",
       "22839    C017  R455  00-00-02            25 ST        R      BMT 2021-07-24   \n",
       "39434   JFK03  R536  00-00-05  JFK JAMAICA CT1        E      IND 2021-08-27   \n",
       "166190   R246  R177  00-00-04   68ST-HUNTER CO        6      IRT 2021-08-12   \n",
       "76485    N209  R443  00-00-02           170 ST       BD      IND 2021-07-31   \n",
       "151741   R201  R041  00-00-01    BOWLING GREEN       45      IRT 2021-08-02   \n",
       "135859   R121  R290  01-05-00       HOUSTON ST        1      IRT 2021-07-27   \n",
       "156140  R217A  R194  00-05-01      BLEECKER ST      6DF      IRT 2021-09-15   \n",
       "79054    N225  R157  01-00-02   NORWOOD 205 ST        D      IND 2021-10-01   \n",
       "104956   N525  R142  01-00-02   DELANCEY/ESSEX     FJMZ      IND 2021-09-13   \n",
       "21168    C008  R099  00-06-03        DEKALB AV    BDNQR      BMT 2021-08-18   \n",
       "48337    N020  R101  00-00-02           145 ST     ABCD      IND 2021-08-24   \n",
       "193144   R532  R328  00-05-01  METS-WILLETS PT        7      IRT 2021-08-30   \n",
       "184583   R423  R429  00-05-00  PELHAM BAY PARK        6      IRT 2021-08-29   \n",
       "173983   R302  R324  01-00-02           116 ST       23      IRT 2021-07-15   \n",
       "179168   R329  R362  00-00-01      ALLERTON AV       25      IRT 2021-09-24   \n",
       "98134    N500  R020  00-03-01   47-50 STS ROCK     BDFM      IND 2021-09-25   \n",
       "\n",
       "            TIME     DESC     ENTRIES      EXITS           DATE_TIME  \\\n",
       "130226  05:00:00  REGULAR      221945     208376 2021-08-28 05:00:00   \n",
       "46280   17:00:00  REGULAR  1610379045  134768689 2021-08-23 17:00:00   \n",
       "66188   00:00:00  REGULAR     2595906    2348161 2021-08-26 00:00:00   \n",
       "174881  00:00:00  REGULAR      832703     637119 2021-08-22 00:00:00   \n",
       "22839   04:00:00  REGULAR      669590    6810245 2021-07-24 04:00:00   \n",
       "39434   05:00:00  REGULAR       37521     434657 2021-08-27 05:00:00   \n",
       "166190  13:00:00  REGULAR     5449159    3518550 2021-08-12 13:00:00   \n",
       "76485   09:00:00  REGULAR     4326008    2323279 2021-07-31 09:00:00   \n",
       "151741  08:00:00  REGULAR     1691078     942338 2021-08-02 08:00:00   \n",
       "135859  01:00:00  REGULAR         319          0 2021-07-27 01:00:00   \n",
       "156140  04:00:00  REGULAR     4721169     907548 2021-09-15 04:00:00   \n",
       "79054   01:00:00  REGULAR       76293      68546 2021-10-01 01:00:00   \n",
       "104956  01:00:00  REGULAR     8781357    7905878 2021-09-13 01:00:00   \n",
       "21168   16:00:00  REGULAR      418547     143293 2021-08-18 16:00:00   \n",
       "48337   17:55:25  REGULAR    12017178   12606883 2021-08-24 17:55:25   \n",
       "193144  05:00:00  REGULAR     1448702     120714 2021-08-30 05:00:00   \n",
       "184583  20:00:00  REGULAR   150997191          0 2021-08-29 20:00:00   \n",
       "173983  05:00:00  REGULAR     8489599    1541071 2021-07-15 05:00:00   \n",
       "179168  09:00:00  REGULAR    19787354    1214654 2021-09-24 09:00:00   \n",
       "98134   04:00:00  REGULAR     8024920    4183723 2021-09-25 04:00:00   \n",
       "\n",
       "              DAY  \n",
       "130226   Saturday  \n",
       "46280      Monday  \n",
       "66188    Thursday  \n",
       "174881     Sunday  \n",
       "22839    Saturday  \n",
       "39434      Friday  \n",
       "166190   Thursday  \n",
       "76485    Saturday  \n",
       "151741     Monday  \n",
       "135859    Tuesday  \n",
       "156140  Wednesday  \n",
       "79054      Friday  \n",
       "104956     Monday  \n",
       "21168   Wednesday  \n",
       "48337     Tuesday  \n",
       "193144     Monday  \n",
       "184583     Sunday  \n",
       "173983   Thursday  \n",
       "179168     Friday  \n",
       "98134    Saturday  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b51ab07f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2934629, 13)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "afbca32b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592792</td>\n",
       "      <td>2595706</td>\n",
       "      <td>2021-06-26 00:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592804</td>\n",
       "      <td>2595713</td>\n",
       "      <td>2021-06-26 04:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592816</td>\n",
       "      <td>2595729</td>\n",
       "      <td>2021-06-26 08:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592870</td>\n",
       "      <td>2595762</td>\n",
       "      <td>2021-06-26 12:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592992</td>\n",
       "      <td>2595791</td>\n",
       "      <td>2021-06-26 16:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    C/A  UNIT       SCP STATION       DATE  ENTRIES    EXITS  \\\n",
       "0  A002  R051  02-00-00   59 ST 2021-06-26  7592792  2595706   \n",
       "1  A002  R051  02-00-00   59 ST 2021-06-26  7592804  2595713   \n",
       "2  A002  R051  02-00-00   59 ST 2021-06-26  7592816  2595729   \n",
       "3  A002  R051  02-00-00   59 ST 2021-06-26  7592870  2595762   \n",
       "4  A002  R051  02-00-00   59 ST 2021-06-26  7592992  2595791   \n",
       "\n",
       "            DATE_TIME       DAY  \n",
       "0 2021-06-26 00:00:00  Saturday  \n",
       "1 2021-06-26 04:00:00  Saturday  \n",
       "2 2021-06-26 08:00:00  Saturday  \n",
       "3 2021-06-26 12:00:00  Saturday  \n",
       "4 2021-06-26 16:00:00  Saturday  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=df.drop(['LINENAME','DIVISION','TIME','DESC'],axis=1,errors=\"ignore\")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8d51fd92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2911468</th>\n",
       "      <td>S101</td>\n",
       "      <td>R070</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>ST. GEORGE</td>\n",
       "      <td>2021-09-15 08:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2911391</th>\n",
       "      <td>S101</td>\n",
       "      <td>R070</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>ST. GEORGE</td>\n",
       "      <td>2021-09-02 20:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2911401</th>\n",
       "      <td>S101</td>\n",
       "      <td>R070</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>ST. GEORGE</td>\n",
       "      <td>2021-09-04 12:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2911400</th>\n",
       "      <td>S101</td>\n",
       "      <td>R070</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>ST. GEORGE</td>\n",
       "      <td>2021-09-04 08:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2911398</th>\n",
       "      <td>S101</td>\n",
       "      <td>R070</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>ST. GEORGE</td>\n",
       "      <td>2021-09-04 00:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A  UNIT       SCP     STATION           DATE_TIME  ENTRIES\n",
       "2911468  S101  R070  00-00-02  ST. GEORGE 2021-09-15 08:00:00        2\n",
       "2911391  S101  R070  00-00-02  ST. GEORGE 2021-09-02 20:00:00        2\n",
       "2911401  S101  R070  00-00-02  ST. GEORGE 2021-09-04 12:00:00        2\n",
       "2911400  S101  R070  00-00-02  ST. GEORGE 2021-09-04 08:00:00        2\n",
       "2911398  S101  R070  00-00-02  ST. GEORGE 2021-09-04 00:00:00        2"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    " .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\",\"DATE_TIME\"] )\n",
    " .ENTRIES.count()\n",
    " .reset_index()\n",
    " .sort_values(\"ENTRIES\", ascending=False)).head(5)\n",
    "           "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "64a3a45e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.sort_values([\"C/A\", \"UNIT\", \"SCP\", \"STATION\" ,\"DATE_TIME\"], \n",
    "                          inplace=True, ascending=False)\n",
    "df.drop_duplicates(subset=[\"C/A\", \"UNIT\", \"SCP\", \"STATION\" ,\"DATE_TIME\"], inplace=True)\n",
    "                   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c3247fbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26 00:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1956336</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-01</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-01 08:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1956316</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-01</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-08-29 00:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1956317</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-01</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-08-29 04:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1956318</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-01</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-08-29 08:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A  UNIT       SCP         STATION           DATE_TIME  ENTRIES\n",
       "0        A002  R051  02-00-00           59 ST 2021-06-26 00:00:00        1\n",
       "1956336  R139  R031  04-00-01  34 ST-PENN STA 2021-09-01 08:00:00        1\n",
       "1956316  R139  R031  04-00-01  34 ST-PENN STA 2021-08-29 00:00:00        1\n",
       "1956317  R139  R031  04-00-01  34 ST-PENN STA 2021-08-29 04:00:00        1\n",
       "1956318  R139  R031  04-00-01  34 ST-PENN STA 2021-08-29 08:00:00        1"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    " .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE_TIME\"])\n",
    " .ENTRIES.count()\n",
    " .reset_index()\n",
    " .sort_values(\"ENTRIES\", ascending=False)).head(5)\n",
    "           #"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "124b6bfa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2934482, 9)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b175d212",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">C/A</th>\n",
       "      <th colspan=\"2\" halign=\"left\">UNIT</th>\n",
       "      <th colspan=\"2\" halign=\"left\">SCP</th>\n",
       "      <th colspan=\"2\" halign=\"left\">ENTRIES</th>\n",
       "      <th colspan=\"2\" halign=\"left\">EXITS</th>\n",
       "      <th colspan=\"2\" halign=\"left\">DAY</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "      <th>max</th>\n",
       "      <th>sum</th>\n",
       "      <th>max</th>\n",
       "      <th>sum</th>\n",
       "      <th>max</th>\n",
       "      <th>sum</th>\n",
       "      <th>max</th>\n",
       "      <th>sum</th>\n",
       "      <th>max</th>\n",
       "      <th>sum</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>STATION</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1 AV</th>\n",
       "      <td>H008H008H008H008H008H008H008H008H008H008H008H0...</td>\n",
       "      <td>H008</td>\n",
       "      <td>R248R248R248R248R248R248R248R248R248R248R248R2...</td>\n",
       "      <td>R248</td>\n",
       "      <td>01-00-0401-00-0401-00-0401-00-0401-00-0401-00-...</td>\n",
       "      <td>02-05-01</td>\n",
       "      <td>278240854227</td>\n",
       "      <td>370901778</td>\n",
       "      <td>281091705218</td>\n",
       "      <td>388204396</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103 ST</th>\n",
       "      <td>R252R252R252R252R252R252R252R252R252R252R252R2...</td>\n",
       "      <td>R252</td>\n",
       "      <td>R180R180R180R180R180R180R180R180R180R180R180R1...</td>\n",
       "      <td>R314</td>\n",
       "      <td>00-03-0200-03-0200-03-0200-03-0200-03-0200-03-...</td>\n",
       "      <td>00-03-02</td>\n",
       "      <td>79893955628</td>\n",
       "      <td>26255994</td>\n",
       "      <td>70843745229</td>\n",
       "      <td>44995158</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103 ST-CORONA</th>\n",
       "      <td>R529R529R529R529R529R529R529R529R529R529R529R5...</td>\n",
       "      <td>R529</td>\n",
       "      <td>R208R208R208R208R208R208R208R208R208R208R208R2...</td>\n",
       "      <td>R208</td>\n",
       "      <td>00-06-0100-06-0100-06-0100-06-0100-06-0100-06-...</td>\n",
       "      <td>00-06-01</td>\n",
       "      <td>38730959242</td>\n",
       "      <td>16585739</td>\n",
       "      <td>39606951706</td>\n",
       "      <td>26408723</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104 ST</th>\n",
       "      <td>N137N137N137N137N137N137N137N137N137N137N137N1...</td>\n",
       "      <td>N137</td>\n",
       "      <td>R354R354R354R354R354R354R354R354R354R354R354R3...</td>\n",
       "      <td>R354</td>\n",
       "      <td>00-06-0100-06-0100-06-0100-06-0100-06-0100-06-...</td>\n",
       "      <td>00-06-01</td>\n",
       "      <td>994639364028</td>\n",
       "      <td>1681050263</td>\n",
       "      <td>582107311822</td>\n",
       "      <td>978352141</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110 ST</th>\n",
       "      <td>R254R254R254R254R254R254R254R254R254R254R254R2...</td>\n",
       "      <td>R254</td>\n",
       "      <td>R181R181R181R181R181R181R181R181R181R181R181R1...</td>\n",
       "      <td>R181</td>\n",
       "      <td>01-00-0201-00-0201-00-0201-00-0201-00-0201-00-...</td>\n",
       "      <td>01-00-02</td>\n",
       "      <td>24743585297</td>\n",
       "      <td>14838207</td>\n",
       "      <td>23982099529</td>\n",
       "      <td>13874121</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WOODLAWN</th>\n",
       "      <td>R294R294R294R294R294R294R294R294R294R294R294R2...</td>\n",
       "      <td>R294</td>\n",
       "      <td>R052R052R052R052R052R052R052R052R052R052R052R0...</td>\n",
       "      <td>R052</td>\n",
       "      <td>00-00-0400-00-0400-00-0400-00-0400-00-0400-00-...</td>\n",
       "      <td>00-00-04</td>\n",
       "      <td>19617815872</td>\n",
       "      <td>9037031</td>\n",
       "      <td>7563244707</td>\n",
       "      <td>7447752</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WORLD TRADE CTR</th>\n",
       "      <td>N094N094N094N094N094N094N094N094N094N094N094N0...</td>\n",
       "      <td>N094</td>\n",
       "      <td>R029R029R029R029R029R029R029R029R029R029R029R0...</td>\n",
       "      <td>R029</td>\n",
       "      <td>01-06-0301-06-0301-06-0301-06-0301-06-0301-06-...</td>\n",
       "      <td>01-06-03</td>\n",
       "      <td>938773846602</td>\n",
       "      <td>1580171766</td>\n",
       "      <td>1083251940068</td>\n",
       "      <td>2133796536</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WTC-CORTLANDT</th>\n",
       "      <td>R109R109R109R109R109R109R109R109R109R109R109R1...</td>\n",
       "      <td>R109</td>\n",
       "      <td>R305R305R305R305R305R305R305R305R305R305R305R3...</td>\n",
       "      <td>R305</td>\n",
       "      <td>03-00-0203-00-0203-00-0203-00-0203-00-0203-00-...</td>\n",
       "      <td>05-03-00</td>\n",
       "      <td>434076858465</td>\n",
       "      <td>730988389</td>\n",
       "      <td>3341430212</td>\n",
       "      <td>1138567</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>YORK ST</th>\n",
       "      <td>N530N530N530N530N530N530N530N530N530N530N530N5...</td>\n",
       "      <td>N530</td>\n",
       "      <td>R301R301R301R301R301R301R301R301R301R301R301R3...</td>\n",
       "      <td>R301</td>\n",
       "      <td>00-00-0200-00-0200-00-0200-00-0200-00-0200-00-...</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>17875625599</td>\n",
       "      <td>17142908</td>\n",
       "      <td>5911938508</td>\n",
       "      <td>7735619</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZEREGA AV</th>\n",
       "      <td>R419R419R419R419R419R419R419R419R419R419R419R4...</td>\n",
       "      <td>R419</td>\n",
       "      <td>R326R326R326R326R326R326R326R326R326R326R326R3...</td>\n",
       "      <td>R326</td>\n",
       "      <td>00-05-0100-05-0100-05-0100-05-0100-05-0100-05-...</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>1704392081</td>\n",
       "      <td>1310763</td>\n",
       "      <td>1171387489</td>\n",
       "      <td>827951</td>\n",
       "      <td>FridayFridayFridayFridayFridayFridayThursdayTh...</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>379 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                               C/A        \\\n",
       "                                                               sum   max   \n",
       "STATION                                                                    \n",
       "1 AV             H008H008H008H008H008H008H008H008H008H008H008H0...  H008   \n",
       "103 ST           R252R252R252R252R252R252R252R252R252R252R252R2...  R252   \n",
       "103 ST-CORONA    R529R529R529R529R529R529R529R529R529R529R529R5...  R529   \n",
       "104 ST           N137N137N137N137N137N137N137N137N137N137N137N1...  N137   \n",
       "110 ST           R254R254R254R254R254R254R254R254R254R254R254R2...  R254   \n",
       "...                                                            ...   ...   \n",
       "WOODLAWN         R294R294R294R294R294R294R294R294R294R294R294R2...  R294   \n",
       "WORLD TRADE CTR  N094N094N094N094N094N094N094N094N094N094N094N0...  N094   \n",
       "WTC-CORTLANDT    R109R109R109R109R109R109R109R109R109R109R109R1...  R109   \n",
       "YORK ST          N530N530N530N530N530N530N530N530N530N530N530N5...  N530   \n",
       "ZEREGA AV        R419R419R419R419R419R419R419R419R419R419R419R4...  R419   \n",
       "\n",
       "                                                              UNIT        \\\n",
       "                                                               sum   max   \n",
       "STATION                                                                    \n",
       "1 AV             R248R248R248R248R248R248R248R248R248R248R248R2...  R248   \n",
       "103 ST           R180R180R180R180R180R180R180R180R180R180R180R1...  R314   \n",
       "103 ST-CORONA    R208R208R208R208R208R208R208R208R208R208R208R2...  R208   \n",
       "104 ST           R354R354R354R354R354R354R354R354R354R354R354R3...  R354   \n",
       "110 ST           R181R181R181R181R181R181R181R181R181R181R181R1...  R181   \n",
       "...                                                            ...   ...   \n",
       "WOODLAWN         R052R052R052R052R052R052R052R052R052R052R052R0...  R052   \n",
       "WORLD TRADE CTR  R029R029R029R029R029R029R029R029R029R029R029R0...  R029   \n",
       "WTC-CORTLANDT    R305R305R305R305R305R305R305R305R305R305R305R3...  R305   \n",
       "YORK ST          R301R301R301R301R301R301R301R301R301R301R301R3...  R301   \n",
       "ZEREGA AV        R326R326R326R326R326R326R326R326R326R326R326R3...  R326   \n",
       "\n",
       "                                                               SCP            \\\n",
       "                                                               sum       max   \n",
       "STATION                                                                        \n",
       "1 AV             01-00-0401-00-0401-00-0401-00-0401-00-0401-00-...  02-05-01   \n",
       "103 ST           00-03-0200-03-0200-03-0200-03-0200-03-0200-03-...  00-03-02   \n",
       "103 ST-CORONA    00-06-0100-06-0100-06-0100-06-0100-06-0100-06-...  00-06-01   \n",
       "104 ST           00-06-0100-06-0100-06-0100-06-0100-06-0100-06-...  00-06-01   \n",
       "110 ST           01-00-0201-00-0201-00-0201-00-0201-00-0201-00-...  01-00-02   \n",
       "...                                                            ...       ...   \n",
       "WOODLAWN         00-00-0400-00-0400-00-0400-00-0400-00-0400-00-...  00-00-04   \n",
       "WORLD TRADE CTR  01-06-0301-06-0301-06-0301-06-0301-06-0301-06-...  01-06-03   \n",
       "WTC-CORTLANDT    03-00-0203-00-0203-00-0203-00-0203-00-0203-00-...  05-03-00   \n",
       "YORK ST          00-00-0200-00-0200-00-0200-00-0200-00-0200-00-...  00-00-02   \n",
       "ZEREGA AV        00-05-0100-05-0100-05-0100-05-0100-05-0100-05-...  00-05-01   \n",
       "\n",
       "                      ENTRIES                      EXITS              \\\n",
       "                          sum         max            sum         max   \n",
       "STATION                                                                \n",
       "1 AV             278240854227   370901778   281091705218   388204396   \n",
       "103 ST            79893955628    26255994    70843745229    44995158   \n",
       "103 ST-CORONA     38730959242    16585739    39606951706    26408723   \n",
       "104 ST           994639364028  1681050263   582107311822   978352141   \n",
       "110 ST            24743585297    14838207    23982099529    13874121   \n",
       "...                       ...         ...            ...         ...   \n",
       "WOODLAWN          19617815872     9037031     7563244707     7447752   \n",
       "WORLD TRADE CTR  938773846602  1580171766  1083251940068  2133796536   \n",
       "WTC-CORTLANDT    434076858465   730988389     3341430212     1138567   \n",
       "YORK ST           17875625599    17142908     5911938508     7735619   \n",
       "ZEREGA AV          1704392081     1310763     1171387489      827951   \n",
       "\n",
       "                                                               DAY             \n",
       "                                                               sum        max  \n",
       "STATION                                                                        \n",
       "1 AV             FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "103 ST           FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "103 ST-CORONA    FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "104 ST           FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "110 ST           FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "...                                                            ...        ...  \n",
       "WOODLAWN         FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "WORLD TRADE CTR  FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "WTC-CORTLANDT    FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "YORK ST          FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "ZEREGA AV        FridayFridayFridayFridayFridayFridayThursdayTh...  Wednesday  \n",
       "\n",
       "[379 rows x 12 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#agg\n",
    "df.groupby('STATION').agg(['sum','max'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a288c60c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>210210</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>650</td>\n",
       "      <td>2021-10-01 21:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210209</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 17:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210208</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 13:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210207</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 09:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210206</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 05:00:00</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A  UNIT       SCP        STATION       DATE  ENTRIES  EXITS  \\\n",
       "210210  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    650   \n",
       "210209  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "210208  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "210207  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "210206  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "\n",
       "                 DATE_TIME     DAY  \n",
       "210210 2021-10-01 21:00:00  Friday  \n",
       "210209 2021-10-01 17:00:00  Friday  \n",
       "210208 2021-10-01 13:00:00  Friday  \n",
       "210207 2021-10-01 09:00:00  Friday  \n",
       "210206 2021-10-01 05:00:00  Friday  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8ee006ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['TRAFFIC']= df['ENTRIES']+ df['EXITS']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e9a0c06e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.reset_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "74e0e6c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-20-2b4aaa5217a5>:1: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n",
      "  df[[\"PREV_DATE\", \"PREV_TRAFFIC\"]] = (df\n"
     ]
    }
   ],
   "source": [
    "df[[\"PREV_DATE\", \"PREV_TRAFFIC\"]] = (df\n",
    "                                     .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\",\"DATE\"])[\"DATE_TIME\", \"TRAFFIC\"]\n",
    "                                    .apply(lambda grp: grp.shift(1)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ff2eded2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.dropna(subset=[\"PREV_DATE\"], axis=0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "edb09488",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "C/A    UNIT  SCP       STATION      \n",
       "A002   R051  02-00-00  59 ST            490\n",
       "             02-00-01  59 ST            489\n",
       "             02-03-00  59 ST            489\n",
       "             02-03-01  59 ST            490\n",
       "             02-03-02  59 ST            490\n",
       "                                       ... \n",
       "TRAM2  R469  00-00-01  RIT-ROOSEVELT    495\n",
       "             00-03-00  RIT-ROOSEVELT    424\n",
       "             00-03-01  RIT-ROOSEVELT    450\n",
       "             00-05-00  RIT-ROOSEVELT      1\n",
       "             00-05-01  RIT-ROOSEVELT     25\n",
       "Length: 4986, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df[df[\"TRAFFIC\"] < df[\"PREV_TRAFFIC\"]]\n",
    "    .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\"])\n",
    "    .size())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "921c13da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1217208 1401146.0\n",
      "1400753 1216924.0\n",
      "1215441 1398948.0\n",
      "1398937 1215439.0\n",
      "1215105 1398608.0\n",
      "1398344 1215006.0\n",
      "1214681 1398040.0\n",
      "1397802 1214516.0\n",
      "1214423 1397715.0\n",
      "1397225 1214019.0\n",
      "1213811 1396981.0\n",
      "1396895 1213756.0\n",
      "1396198 1213196.0\n",
      "1213176 1396185.0\n",
      "2187374764 91.0\n",
      "8971548 52.0\n",
      "171275 99.0\n",
      "184609343 327681.0\n",
      "2130578 18.0\n",
      "2914939 458.0\n",
      "12874932 51.0\n",
      "3 262243.0\n",
      "85833085 3604505.0\n",
      "322383746 3103920210.0\n",
      "858354 201391185.0\n",
      "5 2853710385.0\n",
      "2853710147 5.0\n",
      "1468 102506.0\n",
      "3849250 196824.0\n",
      "1775639362 292.0\n",
      "22305300 160.0\n",
      "253510 89.0\n",
      "19799 393305.0\n",
      "37 590015.0\n",
      "2811942 183.0\n",
      "2620877 654364676.0\n",
      "107414 393245.0\n",
      "189534 169.0\n",
      "190615 52.0\n",
      "262011 174.0\n",
      "458872 262144.0\n",
      "1090520 266.0\n",
      "103939 334.0\n",
      "959420 269.0\n",
      "116701 117.0\n",
      "6253566 252.0\n",
      "3751215 83.0\n",
      "1250033 3319806650.0\n",
      "25447884 10.0\n",
      "6016290 25447880.0\n",
      "3355129 9.0\n",
      "393607 589900.0\n",
      "250869 320.0\n",
      "624552 11.0\n",
      "1281187 5.0\n",
      "407792 45.0\n",
      "473816 91.0\n",
      "169249 3.0\n",
      "492787 15.0\n",
      "310539 16.0\n",
      "516558 144.0\n",
      "107382 71.0\n",
      "190468 113.0\n",
      "210457 45.0\n",
      "461630 320.0\n",
      "107380 44.0\n",
      "154880 404.0\n",
      "247697 22.0\n",
      "367991 32796.0\n",
      "32796 367991.0\n",
      "270070 32734.0\n",
      "32734 270070.0\n",
      "900953 12474.0\n",
      "12453 900953.0\n",
      "209633 89.0\n",
      "903279 215.0\n",
      "632599 298596.0\n",
      "298440 632599.0\n",
      "1073732 149.0\n",
      "213152 224.0\n",
      "112536 33.0\n",
      "500611 0.0\n",
      "0 500611.0\n",
      "362463 74592.0\n",
      "74578 362463.0\n",
      "29 121450.0\n",
      "121307 29.0\n",
      "155362 552635.0\n",
      "552427 155362.0\n",
      "117825 3.0\n",
      "192 869343.0\n",
      "869197 192.0\n",
      "632599 166.0\n",
      "293952 3720.0\n",
      "3510 293952.0\n",
      "197212 0.0\n",
      "373887 737182.0\n",
      "737182 373409.0\n",
      "373309 737182.0\n",
      "28825 363527.0\n",
      "363517 28825.0\n",
      "253514 0.0\n",
      "28599 320915.0\n",
      "320898 28599.0\n",
      "4 131506.0\n",
      "131377 4.0\n",
      "147309 10039.0\n",
      "9996 147309.0\n",
      "182093 72405.0\n",
      "72349 182093.0\n",
      "182033 72349.0\n",
      "72294 182033.0\n",
      "484409 256.0\n",
      "580870 327687.0\n",
      "24633861 381.0\n",
      "6981400 70.0\n",
      "293791 458833.0\n",
      "453646 293.0\n",
      "23338925 31.0\n",
      "1453189 16777233.0\n",
      "1058210445 1285574.0\n",
      "1285392 1058210445.0\n",
      "7257549 96.0\n",
      "744039362 85.0\n",
      "7 80073882.0\n",
      "80073599 7.0\n",
      "2700872 21.0\n",
      "67110170 252.0\n",
      "67110178 327682.0\n",
      "250 67110170.0\n",
      "9581810 327680.0\n",
      "451009 1966633.0\n",
      "977934 12.0\n",
      "10487793 2033.0\n",
      "2033 10487793.0\n",
      "302843 2134043786.0\n",
      "16379616 650978.0\n",
      "16701273 3069788.0\n",
      "3069777 16701273.0\n",
      "16700618 3069130.0\n",
      "3069130 16700618.0\n",
      "1520152 389.0\n",
      "117441061 9.0\n",
      "4793104 9515.0\n",
      "2166987 109.0\n",
      "250742 38.0\n",
      "728 393216.0\n",
      "125941 51.0\n",
      "601289 134243330.0\n",
      "10846048 36.0\n",
      "7856642 338.0\n",
      "10950705 58.0\n",
      "462087 41.0\n",
      "1785508 436263421.0\n",
      "1158608 134.0\n",
      "159777 5.0\n",
      "102019 20.0\n"
     ]
    }
   ],
   "source": [
    "def get_traffic_counts(row, max_counter):\n",
    "    counter = row[\"TRAFFIC\"] - row[\"PREV_TRAFFIC\"]\n",
    "    if counter < 0:   \n",
    "        counter = -counter\n",
    "    if counter > max_counter: \n",
    "        print(row[\"TRAFFIC\"], row[\"PREV_TRAFFIC\"])\n",
    "        counter = min(row[\"TRAFFIC\"], row[\"PREV_TRAFFIC\"])\n",
    "    if counter > max_counter:     \n",
    "        return 0\n",
    "    return counter\n",
    "df[\"DAILY_TRAFFIC\"] = df.apply(get_traffic_counts, axis=1, max_counter=100000)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8e0457c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "      <th>TRAFFIC</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_TRAFFIC</th>\n",
       "      <th>DAILY_TRAFFIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>210209</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 17:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 21:00:00</td>\n",
       "      <td>6204.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>210208</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 13:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 17:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>210207</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 09:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 13:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>210206</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 05:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 09:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>210205</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 01:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 05:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>210203</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 17:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 21:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>210202</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 13:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 17:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>210201</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 09:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 13:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>210200</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 05:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 09:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>210199</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 01:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 05:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     index    C/A  UNIT       SCP        STATION       DATE  ENTRIES  EXITS  \\\n",
       "1   210209  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "2   210208  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "3   210207  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "4   210206  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "5   210205  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "7   210203  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "8   210202  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "9   210201  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "10  210200  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "11  210199  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "\n",
       "             DATE_TIME       DAY  TRAFFIC           PREV_DATE  PREV_TRAFFIC  \\\n",
       "1  2021-10-01 17:00:00    Friday     6203 2021-10-01 21:00:00        6204.0   \n",
       "2  2021-10-01 13:00:00    Friday     6203 2021-10-01 17:00:00        6203.0   \n",
       "3  2021-10-01 09:00:00    Friday     6203 2021-10-01 13:00:00        6203.0   \n",
       "4  2021-10-01 05:00:00    Friday     6203 2021-10-01 09:00:00        6203.0   \n",
       "5  2021-10-01 01:00:00    Friday     6203 2021-10-01 05:00:00        6203.0   \n",
       "7  2021-09-30 17:00:00  Thursday     6203 2021-09-30 21:00:00        6203.0   \n",
       "8  2021-09-30 13:00:00  Thursday     6203 2021-09-30 17:00:00        6203.0   \n",
       "9  2021-09-30 09:00:00  Thursday     6203 2021-09-30 13:00:00        6203.0   \n",
       "10 2021-09-30 05:00:00  Thursday     6203 2021-09-30 09:00:00        6203.0   \n",
       "11 2021-09-30 01:00:00  Thursday     6203 2021-09-30 05:00:00        6203.0   \n",
       "\n",
       "    DAILY_TRAFFIC  \n",
       "1             1.0  \n",
       "2             0.0  \n",
       "3             0.0  \n",
       "4             0.0  \n",
       "5             0.0  \n",
       "7             0.0  \n",
       "8             0.0  \n",
       "9             0.0  \n",
       "10            0.0  \n",
       "11            0.0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "4c0b3224",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION</th>\n",
       "      <th>DAY</th>\n",
       "      <th>DAILY_TRAFFIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1 AV</td>\n",
       "      <td>Friday</td>\n",
       "      <td>291770.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1 AV</td>\n",
       "      <td>Monday</td>\n",
       "      <td>248881.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1 AV</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>237954.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1 AV</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>193855.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1 AV</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>272430.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  STATION       DAY  DAILY_TRAFFIC\n",
       "0    1 AV    Friday       291770.0\n",
       "1    1 AV    Monday       248881.0\n",
       "2    1 AV  Saturday       237954.0\n",
       "3    1 AV    Sunday       193855.0\n",
       "4    1 AV  Thursday       272430.0"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sd = df.groupby([\"STATION\", \"DAY\"])[['DAILY_TRAFFIC']].sum().reset_index()\n",
    "sd.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4b5e4858",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION</th>\n",
       "      <th>DAILY_TRAFFIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>9358396.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>GRD CNTRL-42 ST</td>\n",
       "      <td>7093095.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>34 ST-HERALD SQ</td>\n",
       "      <td>6850849.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>14 ST-UNION SQ</td>\n",
       "      <td>6260230.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>86 ST</td>\n",
       "      <td>6231245.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           STATION  DAILY_TRAFFIC\n",
       "0   34 ST-PENN STA      9358396.0\n",
       "1  GRD CNTRL-42 ST      7093095.0\n",
       "2  34 ST-HERALD SQ      6850849.0\n",
       "3   14 ST-UNION SQ      6260230.0\n",
       "4            86 ST      6231245.0"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "station_totals = sd.groupby('STATION').sum()\\\n",
    "    .sort_values('DAILY_TRAFFIC', ascending=False)\\\n",
    "    .reset_index()\n",
    "x=station_totals.head(5)\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "5209ff8a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['STATION', 'DAY', 'DAILY_TRAFFIC'], dtype='object')"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mask=sd[(sd['STATION']=='34 ST-PENN STA') \n",
    "        |(sd['STATION']=='GRD CNTRL-42 ST') \n",
    "        | (sd['STATION']=='34 ST-HERALD SQ') \n",
    "        | (sd['STATION']=='14 ST-UNION SQ') \n",
    "        | (sd['STATION']=='86 ST')]\n",
    "mask_two = mask.groupby(['STATION', 'DAY'])[['DAILY_TRAFFIC']].sum().reset_index()\n",
    "mask_two.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "16a7c5de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "      <th>TRAFFIC</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_TRAFFIC</th>\n",
       "      <th>DAILY_TRAFFIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>210209</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 17:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 21:00:00</td>\n",
       "      <td>6204.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>210208</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 13:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 17:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>210207</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 09:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 13:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>210206</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 05:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 09:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>210205</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 01:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 05:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>210203</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 17:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 21:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>210202</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 13:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 17:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>210201</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 09:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 13:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>210200</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 05:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 09:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>210199</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 01:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 05:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     index    C/A  UNIT       SCP        STATION       DATE  ENTRIES  EXITS  \\\n",
       "1   210209  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "2   210208  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "3   210207  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "4   210206  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "5   210205  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "7   210203  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "8   210202  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "9   210201  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "10  210200  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "11  210199  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "\n",
       "             DATE_TIME       DAY  TRAFFIC           PREV_DATE  PREV_TRAFFIC  \\\n",
       "1  2021-10-01 17:00:00    Friday     6203 2021-10-01 21:00:00        6204.0   \n",
       "2  2021-10-01 13:00:00    Friday     6203 2021-10-01 17:00:00        6203.0   \n",
       "3  2021-10-01 09:00:00    Friday     6203 2021-10-01 13:00:00        6203.0   \n",
       "4  2021-10-01 05:00:00    Friday     6203 2021-10-01 09:00:00        6203.0   \n",
       "5  2021-10-01 01:00:00    Friday     6203 2021-10-01 05:00:00        6203.0   \n",
       "7  2021-09-30 17:00:00  Thursday     6203 2021-09-30 21:00:00        6203.0   \n",
       "8  2021-09-30 13:00:00  Thursday     6203 2021-09-30 17:00:00        6203.0   \n",
       "9  2021-09-30 09:00:00  Thursday     6203 2021-09-30 13:00:00        6203.0   \n",
       "10 2021-09-30 05:00:00  Thursday     6203 2021-09-30 09:00:00        6203.0   \n",
       "11 2021-09-30 01:00:00  Thursday     6203 2021-09-30 05:00:00        6203.0   \n",
       "\n",
       "    DAILY_TRAFFIC  \n",
       "1             1.0  \n",
       "2             0.0  \n",
       "3             0.0  \n",
       "4             0.0  \n",
       "5             0.0  \n",
       "7             0.0  \n",
       "8             0.0  \n",
       "9             0.0  \n",
       "10            0.0  \n",
       "11            0.0  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "6cdd61f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "      <th>TRAFFIC</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_TRAFFIC</th>\n",
       "      <th>DAILY_TRAFFIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2934471</th>\n",
       "      <td>10</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-27</td>\n",
       "      <td>7593330</td>\n",
       "      <td>2595903</td>\n",
       "      <td>2021-06-27 16:00:00</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>10189233</td>\n",
       "      <td>2021-06-27 20:00:00</td>\n",
       "      <td>10189349.0</td>\n",
       "      <td>116.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934472</th>\n",
       "      <td>9</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-27</td>\n",
       "      <td>7593227</td>\n",
       "      <td>2595880</td>\n",
       "      <td>2021-06-27 12:00:00</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>10189107</td>\n",
       "      <td>2021-06-27 16:00:00</td>\n",
       "      <td>10189233.0</td>\n",
       "      <td>126.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934473</th>\n",
       "      <td>8</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-27</td>\n",
       "      <td>7593188</td>\n",
       "      <td>2595827</td>\n",
       "      <td>2021-06-27 08:00:00</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>10189015</td>\n",
       "      <td>2021-06-27 12:00:00</td>\n",
       "      <td>10189107.0</td>\n",
       "      <td>92.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934474</th>\n",
       "      <td>7</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-27</td>\n",
       "      <td>7593182</td>\n",
       "      <td>2595820</td>\n",
       "      <td>2021-06-27 04:00:00</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>10189002</td>\n",
       "      <td>2021-06-27 08:00:00</td>\n",
       "      <td>10189015.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934475</th>\n",
       "      <td>6</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-27</td>\n",
       "      <td>7593175</td>\n",
       "      <td>2595818</td>\n",
       "      <td>2021-06-27 00:00:00</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>10188993</td>\n",
       "      <td>2021-06-27 04:00:00</td>\n",
       "      <td>10189002.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934477</th>\n",
       "      <td>4</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592992</td>\n",
       "      <td>2595791</td>\n",
       "      <td>2021-06-26 16:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>10188783</td>\n",
       "      <td>2021-06-26 20:00:00</td>\n",
       "      <td>10188925.0</td>\n",
       "      <td>142.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934478</th>\n",
       "      <td>3</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592870</td>\n",
       "      <td>2595762</td>\n",
       "      <td>2021-06-26 12:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>10188632</td>\n",
       "      <td>2021-06-26 16:00:00</td>\n",
       "      <td>10188783.0</td>\n",
       "      <td>151.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934479</th>\n",
       "      <td>2</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592816</td>\n",
       "      <td>2595729</td>\n",
       "      <td>2021-06-26 08:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>10188545</td>\n",
       "      <td>2021-06-26 12:00:00</td>\n",
       "      <td>10188632.0</td>\n",
       "      <td>87.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934480</th>\n",
       "      <td>1</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592804</td>\n",
       "      <td>2595713</td>\n",
       "      <td>2021-06-26 04:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>10188517</td>\n",
       "      <td>2021-06-26 08:00:00</td>\n",
       "      <td>10188545.0</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2934481</th>\n",
       "      <td>0</td>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26</td>\n",
       "      <td>7592792</td>\n",
       "      <td>2595706</td>\n",
       "      <td>2021-06-26 00:00:00</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>10188498</td>\n",
       "      <td>2021-06-26 04:00:00</td>\n",
       "      <td>10188517.0</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         index   C/A  UNIT       SCP STATION       DATE  ENTRIES    EXITS  \\\n",
       "2934471     10  A002  R051  02-00-00   59 ST 2021-06-27  7593330  2595903   \n",
       "2934472      9  A002  R051  02-00-00   59 ST 2021-06-27  7593227  2595880   \n",
       "2934473      8  A002  R051  02-00-00   59 ST 2021-06-27  7593188  2595827   \n",
       "2934474      7  A002  R051  02-00-00   59 ST 2021-06-27  7593182  2595820   \n",
       "2934475      6  A002  R051  02-00-00   59 ST 2021-06-27  7593175  2595818   \n",
       "2934477      4  A002  R051  02-00-00   59 ST 2021-06-26  7592992  2595791   \n",
       "2934478      3  A002  R051  02-00-00   59 ST 2021-06-26  7592870  2595762   \n",
       "2934479      2  A002  R051  02-00-00   59 ST 2021-06-26  7592816  2595729   \n",
       "2934480      1  A002  R051  02-00-00   59 ST 2021-06-26  7592804  2595713   \n",
       "2934481      0  A002  R051  02-00-00   59 ST 2021-06-26  7592792  2595706   \n",
       "\n",
       "                  DATE_TIME       DAY   TRAFFIC           PREV_DATE  \\\n",
       "2934471 2021-06-27 16:00:00    Sunday  10189233 2021-06-27 20:00:00   \n",
       "2934472 2021-06-27 12:00:00    Sunday  10189107 2021-06-27 16:00:00   \n",
       "2934473 2021-06-27 08:00:00    Sunday  10189015 2021-06-27 12:00:00   \n",
       "2934474 2021-06-27 04:00:00    Sunday  10189002 2021-06-27 08:00:00   \n",
       "2934475 2021-06-27 00:00:00    Sunday  10188993 2021-06-27 04:00:00   \n",
       "2934477 2021-06-26 16:00:00  Saturday  10188783 2021-06-26 20:00:00   \n",
       "2934478 2021-06-26 12:00:00  Saturday  10188632 2021-06-26 16:00:00   \n",
       "2934479 2021-06-26 08:00:00  Saturday  10188545 2021-06-26 12:00:00   \n",
       "2934480 2021-06-26 04:00:00  Saturday  10188517 2021-06-26 08:00:00   \n",
       "2934481 2021-06-26 00:00:00  Saturday  10188498 2021-06-26 04:00:00   \n",
       "\n",
       "         PREV_TRAFFIC  DAILY_TRAFFIC  \n",
       "2934471    10189349.0          116.0  \n",
       "2934472    10189233.0          126.0  \n",
       "2934473    10189107.0           92.0  \n",
       "2934474    10189015.0           13.0  \n",
       "2934475    10189002.0            9.0  \n",
       "2934477    10188925.0          142.0  \n",
       "2934478    10188783.0          151.0  \n",
       "2934479    10188632.0           87.0  \n",
       "2934480    10188545.0           28.0  \n",
       "2934481    10188517.0           19.0  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a361abb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2444857, 14)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8bdc815d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>DAY</th>\n",
       "      <th>TRAFFIC</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_TRAFFIC</th>\n",
       "      <th>DAILY_TRAFFIC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>210209</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 17:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 21:00:00</td>\n",
       "      <td>6204.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>210208</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 13:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 17:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>210207</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 09:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 13:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>210206</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 05:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 09:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>210205</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-10-01 01:00:00</td>\n",
       "      <td>Friday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-10-01 05:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>210203</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 17:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 21:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>210202</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 13:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 17:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>210201</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 09:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 13:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>210200</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 05:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 09:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>210199</td>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>5554</td>\n",
       "      <td>649</td>\n",
       "      <td>2021-09-30 01:00:00</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6203</td>\n",
       "      <td>2021-09-30 05:00:00</td>\n",
       "      <td>6203.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     index    C/A  UNIT       SCP        STATION       DATE  ENTRIES  EXITS  \\\n",
       "1   210209  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "2   210208  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "3   210207  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "4   210206  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "5   210205  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-10-01     5554    649   \n",
       "7   210203  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "8   210202  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "9   210201  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "10  210200  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "11  210199  TRAM2  R469  00-05-01  RIT-ROOSEVELT 2021-09-30     5554    649   \n",
       "\n",
       "             DATE_TIME       DAY  TRAFFIC           PREV_DATE  PREV_TRAFFIC  \\\n",
       "1  2021-10-01 17:00:00    Friday     6203 2021-10-01 21:00:00        6204.0   \n",
       "2  2021-10-01 13:00:00    Friday     6203 2021-10-01 17:00:00        6203.0   \n",
       "3  2021-10-01 09:00:00    Friday     6203 2021-10-01 13:00:00        6203.0   \n",
       "4  2021-10-01 05:00:00    Friday     6203 2021-10-01 09:00:00        6203.0   \n",
       "5  2021-10-01 01:00:00    Friday     6203 2021-10-01 05:00:00        6203.0   \n",
       "7  2021-09-30 17:00:00  Thursday     6203 2021-09-30 21:00:00        6203.0   \n",
       "8  2021-09-30 13:00:00  Thursday     6203 2021-09-30 17:00:00        6203.0   \n",
       "9  2021-09-30 09:00:00  Thursday     6203 2021-09-30 13:00:00        6203.0   \n",
       "10 2021-09-30 05:00:00  Thursday     6203 2021-09-30 09:00:00        6203.0   \n",
       "11 2021-09-30 01:00:00  Thursday     6203 2021-09-30 05:00:00        6203.0   \n",
       "\n",
       "    DAILY_TRAFFIC  \n",
       "1             1.0  \n",
       "2             0.0  \n",
       "3             0.0  \n",
       "4             0.0  \n",
       "5             0.0  \n",
       "7             0.0  \n",
       "8             0.0  \n",
       "9             0.0  \n",
       "10            0.0  \n",
       "11            0.0  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "db41437d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>DAILY_TRAFFIC</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>STATION</th>\n",
       "      <th>DAY</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">1 AV</th>\n",
       "      <th>Friday</th>\n",
       "      <td>291770.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Monday</th>\n",
       "      <td>248881.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Saturday</th>\n",
       "      <td>237954.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sunday</th>\n",
       "      <td>193855.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thursday</th>\n",
       "      <td>272430.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tuesday</th>\n",
       "      <td>271246.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wednesday</th>\n",
       "      <td>280009.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">103 ST</th>\n",
       "      <th>Friday</th>\n",
       "      <td>335606.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Monday</th>\n",
       "      <td>305450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Saturday</th>\n",
       "      <td>198873.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sunday</th>\n",
       "      <td>158248.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thursday</th>\n",
       "      <td>324585.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tuesday</th>\n",
       "      <td>339419.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wednesday</th>\n",
       "      <td>344999.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"6\" valign=\"top\">103 ST-CORONA</th>\n",
       "      <th>Friday</th>\n",
       "      <td>289652.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Monday</th>\n",
       "      <td>272797.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Saturday</th>\n",
       "      <td>217787.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sunday</th>\n",
       "      <td>172169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thursday</th>\n",
       "      <td>286128.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tuesday</th>\n",
       "      <td>286574.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         DAILY_TRAFFIC\n",
       "STATION       DAY                     \n",
       "1 AV          Friday          291770.0\n",
       "              Monday          248881.0\n",
       "              Saturday        237954.0\n",
       "              Sunday          193855.0\n",
       "              Thursday        272430.0\n",
       "              Tuesday         271246.0\n",
       "              Wednesday       280009.0\n",
       "103 ST        Friday          335606.0\n",
       "              Monday          305450.0\n",
       "              Saturday        198873.0\n",
       "              Sunday          158248.0\n",
       "              Thursday        324585.0\n",
       "              Tuesday         339419.0\n",
       "              Wednesday       344999.0\n",
       "103 ST-CORONA Friday          289652.0\n",
       "              Monday          272797.0\n",
       "              Saturday        217787.0\n",
       "              Sunday          172169.0\n",
       "              Thursday        286128.0\n",
       "              Tuesday         286574.0"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sdd = sd.groupby(['STATION','DAY']).sum()\n",
    "sdd.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "8dead8da",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "032c2144",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxMAAAGOCAYAAADsPV7kAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAABRXElEQVR4nO3dedylc/348dfbvoeMRBghUiqSfFORRFq1CaUs2Sql9Veopl0rkiXZs7WpZIkKoaTsS5Iwloix7wy9f398Psdcc+bcy5yZuc995ryej8d5zH2u7bznOte5rut9fbbITCRJkiRpZs3T6wAkSZIk9SeTCUmSJEldMZmQJEmS1BWTCUmSJEldMZmQJEmS1BWTCUmSJEldMZlQ34uISRGRrVev4xk0EbFxc/9HxMa9jknd8/vsnYiY2Lbvt+91TP2qbT9Oakz3+B6FiNi+bT9N7HVM/SAiJkTEYRFxS0RMHeIYXCciTomIKRHxdPNY7Nfjc9hkIiImt/2nRvM6eoxiH1FEnDuKeH84E9trP9FnRPw3IhYcYvkrOiw/sc6b5X0bEZ/ssMxHZ2F/LRgRe0bEBRFxb/0h3BcRN0TE2RGxX0Rs3mG9yUPFOKvavsNzZ+e2x7toS5Lm5Emlw2eN6jWn4hmvIuLoDvthzyGWfed4Oz+2f8+9jGUkw5y/n4iIOyPivIj4fEQ8q9exjicRsXpEfDciLo6Ie+p5/J76/nsRsfoYx9N+rXs6Ih6LiLsi4sqI+GlEvD8iFhrLuMZKRMwTETtGxB/q/3lqRDwQETfVa+1BEbFVh/Xm2LWv7Tw2eXZue6xE5/ux0by2n8Oh/RzYGVgRmK9D3M8BzgTeCizDXPJQf4b/qGbac4D3AUc2J0bEpsBL5vBn79hh2k7AqBOklohYAjgHWLdt1pL19XzgdcAqlB/CeHIW8HCvg9DA+lhEHJiZT7dN/2RPopn7LQAsW1+vAT4YEetn5oO9Dau3ImIe4MvAXsx4g7J0fb0c2DMivg5Mysz/jW2UQIltofqaAKwNbAV8KyK2y8yzZ9PnfKbx919m0zZnSkTMB5wKtD+EW6K+JgIb1tfPxjS4kf2d6ffhvb0KpF9ExErARo1JF1C+/6eZdgxuTjnuW44DrgQSuKFOa+73G+gDIyUTXwfan/p8p/H3jcAhbfOvntWg5pBD6fylXDYbtv0J2pIJ4FMjrDNL+zYiXgm8qMN2XxYR62bmpSN8frvPMX0icSpwKfAE8FxgfeAVM7nNMZGZf6FHF4u5SKeE7L3Aeo333wDuG6uA6pPKpzNz6lh9ZpdWAbYEftmaUH+fG/YqoLlU6wK7GLAt0HrCvgawA3BAL4IaR77N9NedB4GTgJuBlYGtKTew8wBfABZm+puWsXAf5TwyP7A88AbK90d9f1ZEbJmZp87qB2Xmd2d1G7PBjkyfSJxXX49SbijXZZyeJzLzGuCaXscxjHuZ8fhdFdit8f73lGtb09+H2mBELJ6ZD81CTBPb3k/KzD+OsMz2HR5EjYdjd+Zk5ky9KNlT63XuEMu8GDgM+BflR/MY8G/gCOClHZaf1LbdBSknu39RbmZvA/YHnjWTsZ7b2ObGM/t/7bC9iW1xPtX4+w2N5dYC/tdhmQQmzsq+bSx7WGPZu+ur9f6HXfzfLm2sf/QQyywPbNR4f3RbzJ1eG9dlXwYcDFwI3Ao8Ur/b24HTgfeOcEx0em3fadkOcS9AOcGcU/fTVOAe4E/AR4EFR/guJlFO+r+hXAwfA/4GvLnDektREsXLKRfzqfUzr6E8gfjQTHwn7ftg48a8jdvnUZ7uXVj37QPAb4E1Z+F4b/9+Ox67Q8TydspTmWFj6bCfXwv8Abi//TMpxcbfoTzFeagePzcCPwbWGOb/sRml6PnWus6D9fv7NLDILO6T1u/7z23L/azDMh1/W8DiwGcpCfF99Zi5i3IR3A6YZ4Tz0PbA64E/1v/bI5RjfYNhvqNOr6Nnw/e5BuU8fz3ld/IEcAflAn4I8PqZ2NfnNuNom/fythgP7XBMHg5cTDnHPAY8DtwCnAxsNsyx8hvgPzX2R+s651Bu1l/QYZ0X1v/bP+v+eQy4DtgPWGGIz3lu3U931uUvp1SNWKX9ux3lvlqvbb3/ACu3LbNynd5c7uWN+du3zXs+5bx5eY3xbuAEYPmZ/M1Mbmxzctu8APZg2vUyKb+BpduO9/0oN+E3U377T1J+I2cDuwDzjnRuGe58Vaf/tDHt0g7bm9i23jaj+L+f3Fj+nCGWWRrYvPF+UtvndHpt382+6fAdd3pNGmLZiW1xB7ANcAblOH6Sct6+CPg8sMQIx8LRwGrA8TXeJygPTD84M8dXh999x+99mHPnOyjn3oeo5xnKg/avAqdR7l3vpZyX76ecU74KLDXM8dbp1R7bDK/hjs+2z3o1cGyN7ZH6+jfl9/nybvffrLy6+bKa/8lzO8zfpR5UQ+2wqcDubetMalvmD0OsewWw2EzEem5j3ZuZlthcD/yIDheGEbbXfiD+svH36Y3lDm9M/0XbOhOH2f6w+7ax3CKUm4bWsofU/0/zZLzQTP7frmisfx6jSNyYuWTio6NY9tDGttuPieFOqNMt2xbjMsAlI2znMmDCMN/FXyknuvb1ngZe11hnQeCqET5r8kx8J+37YOPGvI3b5p03xOfdBSzT1cmh+2Ti9NHG0jb/LwyRfANvYvpjvv31GPDOtm0H0yfdnV5XAsvOwj5p/r7Xr8us3Ph/XEzbBbRte6tRSkyHi/H3wMLDnIfOZ/qbsdbrUeoNf4fvqNPr6Fn5PimJxEOj+Ywuzt/ZmL4opTpPc7tfbFv3u6P4/36+bZ33jWKd7dvW2YnO54bW615gw7Z1nkdJUDotf8pwnzfMvjqibb1dh1hu97bljmjM275t3lDnlGvp8ABmmNgmN9bteP6jPGhqfsZnG/PeMorv5XRmTLqb8ycNc75qXaP+r236+m3b+1zb9zriNZaSmLbWuQ5YbhTrTBrtcTiz+6bDd9zpNWmIZSc2YlwY+N0I27kRWH2YY+EKyoOJTut+cLTHV9v227/bSW3zJ7bNn+EYr8stNor9NLn5fY5i+fbYZngNd3w2Pmf/EbazZzf7blZfs7XNRES8inJj26qveTfwE8pN1wcodVznAw6KiKsy84IhNrUJJcO6gdJI5WV1+kuAr9BdXeSVGn+vVl/bRcR7M/O3XWwPyo3j4pSi2jdGxAspT7zfX+dfR8ls39Xl9oeyVf3cluOBeSmJHJQ2Du8ATpyJbV7KtDYerwHujIi/1+mXUJKbW9rWOYnyJGEvyhN5KDdPP20s06pa9gTlafBllOPiYcoPdkPKjwdg14g4PDMvZlq1m90pT8hgxqpfQxZXNvyE6atvnUlJDl5BuUGFcnwdT3kq2ckrKaVjx1Oejm9bp89DeaJ8Tn3/OkqpHJSbu59QjoGlKMffq0cRb7deQ9kfZ9Y4WkXnEyg3PN+ag5/dbosuY/k/yg3wCZSbrbWBqRGxMqVkYZG63E2UJ/+PU56Yv4xS//r4iHhRZt5Yl/sU5WlvyxmUkpsJlPPRs+pnHMfQ3/1Ivs+03/cnKVVJ9qT8Hlvzv9FpxYiYF/g1045vKP/Pf1BKGlrHy6aUKjy70NmrKU/FT6bsi9ZxvTDwccpv6AZKlYDNKOerlmY1gaGqqI72+9yB8puG8gTvKMpv/TmU6gevHWL7ozJMg/E7KTfTTY9QkqwrKTd+j1K+702ZVnXvyxFxTGbeXt/v0Vj/Osp38STl5v+FlOOzGc8rKclq63p3FeXmMSjHwaqU3/6vImL1zHygLncg5TzScj7T2qu9dYj/40g2anv/045LlWvCwY33w30nr6GUdv2FUo1v7Tp9zfp+qM/oxmGU47Tl9ZSSICiJ+RWUa8sUyg3owsA6lJvpoByj76Qk913JzAsj4m+UKr0Au1KuWS1bN/4+LjMfH8VmLwXeVv9+AXBrRFxGuaZeCpyXmde1rTMz176Z3TetdhDNKqz3Mf05ajRVhr/P9NW3LqQ89HgB0/bTKsBvIuIlmflUh228pH72fjXmnZl23vwccMwo4phVr6Hcs/2U8nCkVZU7KdeZv1JK8+6rsa1C2XeLUB4a7UN5UAplv7ZXs2pWrx/NOXhYtbOPjzcmPVpjn1zjeeNotzXbdZH5NTOgc9vmNZ/UP0WjGJxSv3VqY/5vhsnEv9CYtyClulNr3oPAfKOM9VxKEfdxlCTkW5Sb2Wzb3oRRbm9i27qTKD+o1vvD6ue03u/GCEWFo923bcud31juZsoJIyjVOFrT/zCT3+tKlIvucBnvH4EXd1h3cmOZo0f4nBdRikb3oNzsfZpy4Z/hu298h8Puk/bjpzF97bb4j2tb75i2+esM8V08TKO6AvCrxrx7GtO3bEy/FogOsa46E9/JpLY4Nm7M27ht3kXA/HXe/JQbrNa8X87s77xu5+jRHLuzEkvbek/RoYiW6Z8y30Gj+Jxyfmg+5d2/Tp+HcnFoTT+4bZtbtH32y7rZJ3XahfX91HrMtUpQbqU8PJncWOfoxrbe2hbD1xrz5qFUU2jum2WGOA/dAizeWLdZZfGS0fxWZsf3yfRPzA7tsN35aat6M8K+Prctjk6vh4DXDLF+UKpDbQd8jHKu2btt/e0ay1/emL51h+0tQaMUi+lLpS4HFmjMW5pSWtaav2edvhzTlyKdQ+OJOjOWMGw/yn31aGOd+0ZY9v7Gso80pm/f9tknU89h9f/TLDX83kx8j5Mb600eYpmF2z77mg7LrAq8B/gI064dtzXWOaJt+eb2Jg1zfDfPq9s29w21hJ5S6tZc5yWj/L8vQUkEhjuG/06HY5hRXPtmYd8cPYrvpP14mNg4Fpr3cucxfVWq9lLDdwxxLPyP6a+5+7Wtt/hw/+chYm7/bie1zZ/YNv8BYKVhtrcM8GbKvdwn6379U2P9G0b4/I07bHNSc5lR/B82rtPnAf7bFvtqbesuADxvZvfb7HjN7t6cmk9eL8zMf7beZOb1EXEB055CD9fo6JmMNDOfiIiTKG0ooDyRfwHl6d1IdgWuz0aPFRHxOcoT5m0a29sKOGgU25tBZp4ZEddQbpK3o5yAoGS7x1Cy2NkmIl7A9Pv5hKxHUd1Pn67TN4mIiZk5eTTbzcxbImId4IuUk9LiHRbbBDi/Pmm4dSbjfhllf4zUw9XzZma7I2gvCTiq7f2RlCfULRvSuUH+bzLzP433zSdJSzX+/jvlBmJhytO7GyLicsoTiaspF4Q51TPD4VkbKmfm1Ii4iVIS2B7jWOg2ljMy85IO01/T+Hs54IGIGGobre98DabvMWP3iNi9w/LN9S4fZv5wvk8pKZmPUqWg9ds5MDOfGkWsLc8cn5n5v4g4hlISAOWp2AaUjhHa/SSnbzT4L8qTSZg93/1ov8/zmPbUbNeIWJ+SVP+b8vT07My8eRbiaD3BW4SyXzamlIT8ISLelY1GuxHxekpbmlVG2GbzfHMe8NL699H1ePk3ZX9eTHmK3OwxqnlcvhR4YoTven/K0+DmQj/J6XtUOobOvfT1wiGta0tm3hsRrVImmP3nlPYdl8/MKCWTP2H6/d3J7Lh2/JzSLmt5ynH2fsq9QbNU4u+ZeeVoNpaZD9bfwd51W8t0WGw9yjH8qiHOf0Ma433T8kqm77znmJy+AfGRlPuIlg0pD+DaXZiZzettewnNUpSHBXPSsTljjYtW5x8/pCRU87bPb1hhDsXVyRpM+/0BHJmZ/24ukJlPUpLIMTe7+7dduvH3fzvMb04b7mR05wjvR3Uiy8zr2k7U1JPjD9oWXWs02xvG9+u/CwHPrn8fmpmPzeJ2O2m/0JwwxN9BqXYwapl5c2buRPkeX0F5yvFzShWlliU7xDCsiFiYUt1rNF3ldhyzo0tLt71vPybb37cv3zK57X1zfzxzEawJx/sb212FUt3s05QnQTdFxLExzB3HLBguxrHux3py2/vRxvLPIaYP9b100kogZmad5nrdOJlSJA7TLtoPU0oqhzMWx+fs+O5Htf3MPBn4GiWhhpLQbEu5sfglcEdEfKTbIDLzu/X1lcx8HeXmH8rTuMMiYgGAiFieUt1opEQCpj/f7MW0Ou4LUqoA7QjsS2nHd0tENB+CdXNcLtk2faRr3Wjd3vh7yaHG3oiIJZm+F8HbOy1XTW57PyfPKWu0vW/eEP2KkW+WYTZcO2rS3KxOtGv9t/lQ8PCZ3ObdmfkJyo3gS4APURrPNhPTBZhWXWZmjNm+aRiL8xaMzXVrqGvONyhVOIdLJGD27teRtO/Hmzou1SOzu2TiXqY9sVquw/zmtPuG2c5zKEX3zfdN9890ZMOb1b62j6ccfK04n6SLsR5GUvus/kDb5CuHuTfdPiK+3J5QjSRL/caL6+vgiHh5/btl5ZnZHuVkt3zj/X6UC/SUzMyIuItZu5kbSnu/2MsxfVd37cfoUP1o70x5stSSnRaqAw9Nqtu5gpKIrUqpC705JfHYjnJjcuyI0c+c9u5TO8Y4RrqN5ZEhpje/l5sZ/rfVepLV/l3+glJdZygXDh/a0DLz6Yj4AeW4bjkqM+8fYdVOx+cNbe+HW75lTn/3o95+Zn4hIvallKK8kHL8v47y5H4h4ICIOCOntWuZFRcxrc7/cymlgVdS6oov2ljuM5RqHvdFxCIMcZxl5sPAlnVQqQ0oVXNXp1RHey7l+/gJ0+qxN693lzH9w5x2rZvj+9umt1/b2t+P1p8o+7rlvXROZttLys/rsEzLWJ5Tdm57/0d4piR+ncb0kyjf5+219O5vzP4uyw+lnO8XAtaOiN0oxzKU6mQndbPReh2+qr6OiIgVKL/31g3pTF1Xe7RvoPN5a7j3vTpvjcZQ15xmSdTVlIci/6wls99m7LtUhhn342geloyZ2Z1M/JnyJBbg/yJizVZVpyijbr66bdmhfJDS9RZRRpdufrEPMWNx2Awi4rWUC9jhzRKC+lT4Y22LXzXS9oZTq2IdRGkvAXBiZnYqmZlVb6Jc1EZrJUqDw/Z+lmcQEV+jVNM5oxaVNbUXNd7T9r55UliEGbUX7R6XmXfVz92E4ROJkbY9nPZjbAfqRapqL2EZ7pgcVj2+9wG2zczLI2LZ1v+xzr+SaQ0YX8HsTybmZhcwrVHkc4DTMvPa9oUiYgNKo2wo54gpTF9SsX+2NQSspWZbZWbX3311BCWRfBbl4cQBo1in0/G5T41rHsp5sOVpSmPAWTXdBTwiFsnMR2fDdomIVYD7M/M+yu+sdUO4NNPOGfNSboBmRzKxftv7+eu/7eebI2tMMP21ZDoR8WJKtdg7KSUUrelnMm0MkVUi4tmZeQ/luHxnnb485bz237ZtzkNpTNyqjtDqWa71BGi7iDi68cCn+Z3PjEOY/nz2xZq0PVMdNSJWZFp14eZ6PVOvxx9h+kar9zHt6X/7d/nzzLytrvtCplVLm20y8+6IOIFp+7P5kOBnORODI0bEpyhtt37Z4Xf2MNM/yJzV6+rM7JtZua5eRGk/07p//EBEHNU4hmfbdbWHmvv2nMy8Cp65Xryt8ypz3HWUksvWA4cd62Cpz5xL6wPn57RVyx4TszuZ+B6lEWpQLhrnR8SxlB/MBxqfl3XZoXw5ItZkWm9OqzfmHdl+QzCEpSnVmb5SLwb/oNRlfyPTeoeCcsMxO0ae/AHTkpK/DbfgLNip8XdSnny3Z/NBafMQjXVGTCYoid7ewP0RcR7lCf6DlORlq7ZlT297fxuldyyAN0fEtyj79cnM/AEzJn/HR8SJddvbjxBXs7j75fUJcKvU6qDhqpJl5pURcRbTeup5X0QsQ7kpW4/SsKrlj231NzuKiFWZ1ltX086UG5DLIuIK4JKIuIPyJOtlTEskwJFEZ9aBlJ5NFqY8LbwoIn5BOT/MTzn2XkvpIWcH4PL6ZO67TOtpaBPgqog4lXLRXppS5eC1dbuz1HNIZj4UEZtTjukHR9k25jTKealVzXLv+rSxvTcnKA23756VGKv2+rQnRMSFlGTllMz81yxs+13ANyPifMpv/g7Keai9h5Gujv+IaLUHW5jSXmKjxuwHmNYbVfv55vSIOI1yHdmWoe0LvCYizqacY+6kNKDdprFMa+wJKB0DbEmpjvEcyvH1i7ruIpSSko0oCe3rgJsy846I+C3Tbkg2Bs6tn9l1b06ZeXFEfJ9pPR2uUONpH7SuWcXpe1l6zhtLS9TvcT5KArYZ01dxeprSKL6V/P2bcv/QqvJyQG3btxjl2rHAHIrzAKbdFC/UmD5TVZwo5/0PAofW38UVlGTp2ZREdOHGsp2uqy0zXPuYtX3T3PaEiDiacs1PSjueIavb1fYzRzKtd7nXAhdExO8pv7Fmwn4dZUyafnMd03pm3DlKT3IPUu6t2qvkjYl6TduXacntEpSaKa3f+PKUc+0BlPZZYx7gzLaWb7Yyn6GHAcpFf2rbcs3XU8AebetMalvmt0OsexUdBkIZIs4th4mh9bobeNVM/N8ntq0/aRTrbN+2zsRu9i2l6LC5X88cZju/byz3OI0BgIZZ59xR7K+kcy8tHx5i2Ycby5w2xDJnMX0vVEe3bftNw8TS6t1muuOnbf0JzNiDV/vrSko2P9R3cVdj+h8pieN0n0fp4rO9d6hOr7uAFUd5vE1qW3fjxryNh5rX4fuc4Xc6ys8/uu0zOh67sxJL23pD/p4oid+DjLx/t2+sE5RGuCMe193uk1GuM7mxTvvx/QJK3dfh4jubxuB6dBh4aZgYJ7fNW5ahx4J496x8n5S2QSPt6wvoMMDYLJ6Tngbe31hvfob+zR851DFHadw+0md9sy3GkcaZ6PTbXZHpe9ppvv443Hc7wv6ah9Jm5elR7K+vMeO4DNu3LTexbf7kxryjZyKuySPE03rdSmPcnsb6Bw2xfKtL1BmOxeHOLYyix5263Nlty/1jNpxDh3qdRtvvgtFd+7rdN2sz45g+rdd6Ix0PlCTo90Os33rdTNtgosMdQyMdf6Pc3+3f7aS2+RPb5nf8fVGShk7/pwdpGztshM+f4diiy96cGvMPGGG/7zmz+212vGZ7A5fMPITSHd8RlCeHj1NOtjdRflivyMwDR9jMOymN4f5FaX9wO+Xp5Gtz9EWMZ9XtHEG5WbyT8uN5kPIj+wqwVmaOpk/l8eCDTF+SNFzjzh83/l6Qzk/S232A8iTmWErXkq0RYJ9g2qixb8/M3TqseyhlxMvrKN9XJ++mPMn7DyUpmgx8k/KErn0o+Wdk5umUBmtXMGMDrRFl5hRK/eePUuoV30s5Du6j3Nh8nDI40YgNHyNiMeBVzFhSA+W7WZrSLd9p9TPupfzfHqYkwvtRusKbqZ6wBJl5GuUJ/r6U4/MhynH0H0pJ4AGUKn3HN9bJzNy5Tj+Jcsw9Qfk+rqecIz5Nj5401Rj/RamO8HlK9YEHKMfO3ZS2NdsDb8jZVBUpS9W7LShdks7unlJOAb5EGczqBsq59mnK7+AvlDFZ3pDT9/zSjaTUdf4n5fz+isw87pmZpRHt6ylPkadQzknXUeo5f2iY7X6P0pnGBZRz3mOUY+wOyhglW2fm56cLJPMISgnXgZQnu48w7Zz5F8rxuiGNtgn19/9KyvVwSl3+Gkr12/a2A6OWmf/LzH0o9fu/T/md3E/5Du6v778PvDAz98mZbEs3GyXlO7mbUpr0M8o1arXMPKfD8h+j3A/cRPk+bqdUz9qI8lueU9qrKraPZTIan6WUhh1GqUbc6bj6APDW9t/FKK99Xe2bLNV23kU558z0uSVLjYDNKW0Az6Qcx837q32Al+aMY2j0hcz8OeX+8RLKsXof5fy2AUOPxzMmMvPjlNKg4yjVRR+vr5spv6Whxm+bo1p9SPdUREyiXIQAyMw50duNNNMiYiJwama+OCKWAK7LzBnarUTEocBfM/Po+v6PwOcyczQD60mSxpHaDq5V7e9JSv/9U3oYkjRujXWXkVLfqqViN0XEe6A0HoyIl9bZv6aOCVDbZbyA2dPIVJI0BiJioYjYOCLexvQlESeaSEhDm90NsKW5Rm0kvjGwTETcRik9ex9wSETsQ6mbfRKlGPpMYLOI+AelWsFnsvT4IknqD8tRqgA23UvtZU1SZ1ZzkiRJA69Wa72pvr2H0q3pXpl5zZArSRofyYQkSZKk/mM1J6mDZZZZJidOnNjrMCRJ48gll1xyd2YON9CqNHBMJqQOJk6cyMUXj/V4TpKk8Swibu51DNJ4Y29OkiRJkrpiMiFJkiSpKyYTkiRJkrpiMiFJkiSpKyYTkiRJkrpiMiFJkiSpKyYTkiRJkrpiMiFJkiSpKyYTkiRJkrpiMiFJkiSpKyYTkiRJkroyX68DkOZqEb2OYOxk9joCSZI0xiyZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZkCRJktQVkwlJkiRJXTGZ0MCIiE9ExDURcXVEnBgRC/U6JkmSpH5mMqGBEBErAB8D1svMFwPzAlv3NipJkqT+ZjKhQTIfsHBEzAcsAtze43gkSZL6msmEBkJm/gf4LnALcAfwQGae1VwmInaJiIsj4uIpU6b0IkxJkqS+YjKhgRARSwFvB1YBlgcWjYj3N5fJzMMyc73MXG/ChAm9CFOSJKmvmExoUGwK3JSZUzJzKnAy8KoexyRJktTXTCY0KG4BNoiIRSIigNcD1/Y4JkmSpL5mMqGBkJkXAb8ALgWuohz7h/U0KEmSpD43X68DkMZKZn4J+FKv45AkSZpbWDIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSsmE5IkSZK6YjIhSZIkqSvz9ToASWLqpb2OYOzMv26vI5AkabaxZEKSJElSV0wmJEmSJHXFZEKSJElSV0wm1FciYuWIWLXxftWIWLmXMUmSJA0qkwn1mz8A2zfeb1+nSZIkaYyZTKjfrABMbry/uU6TJEnSGLNrWPWbG4FPR8R/gAA+VadJcz+70JUkjTMmE+o33wKOAU6r7wPYrnfhSJIkDS6TCfWVzPxJRNwMvKVO+m1mnt/LmCRJkgaVyYT6QkSsC9wArAo8DJzUnJeZA1T/Q5IkaXwwmVC/+DuwDSWJyA7z5x3bcCRJkmQyoX5xLKUXp2N6HIckSZIqkwn1i1uBR4BzgD9l5s09jkeSJGngOc6E+sXewDrAUcD6PY5FkiRJmEyof9wDHETpCvaHEXFj43VDj2OTJEkaSCYT6hffAJ6sfy8BTGi8lu1VUJIkSYPMZEL94geZOQH4E7BFZi7efPU6OEmSpEFkMqF+MTUitgJWBhbtdTCSJEmyNyf1j6eAt1GSiTdFxLObMzPz2J5EJUmSNMBMJtQvLgO2pQxYt1t9QWmQnZRxKCRJkjSGTCbUL7YE3gUcCBwPXN7LYCRJkmQyoT6Rmf8FDoqIq4FrMvPuXsckSZI06Ewm1G8uBj4WEWsDC9VpmZnv6mFMksaTqZf2OoKxM/+6vY5A0oAzmVC/ORx4L6WdRNRp2btwJKlPmXRJmg3sGlb9ZlPgh/Xv9wK/APbuXTiSJEmDy2RC/WYx4EpKqcSSwN+Bj/QyIEmSpEFlNSf1m9soCcUNwCGUpOLW0awYEUtSqkm9mFI1asfMvHDOhClJkjT3M5lQv9kNeIjSNey+ddrnR7nuAcDvMvPdEbEAsMjsD0+SJGlwmEyob0TEvMDuwLGZeQqwwUysuwTwWmB7gMx8EnhyDoQpSZI0MGwzob6RmU8DawIrdbH684EpwFERcVlEHB4RizYXiIhdIuLiiLh4ypQpsyFiSZKkuZvJhPrN1cBXIuI7EfHJ1msU680HrAsckpnrAI8An2sukJmHZeZ6mbnehAkTZn/kkiRJcxmrOanfbFX//VRjWgLfH2G924DbMvOi+v4XtCUTkiRJmjkmE+oLEXE28BVgh27Wz8z/RsStEbFGZl4HvB74x+yMUZIkadCYTKhfbAwcmpnHzMI29gCOrz053UiXiYkkSZIKkwn1kxdGxGs7zcjM80ZaOTMvB9ab3UFJkiQNKpMJ9ZMv1lcn845lIJIkSTKZUH/5PXB9r4OQJElSYTKhfnJkZv6s10FIkiSpcJwJSZIkSV2xZEJ9ITNNfCVJksYZb9AkSZIkdcVkQpIkSVJXTCYkSZIkdcU2E+orEbEssDMwkWljS2Rm7tSzoCRJkgaUyYT6zanMOIp1AiYTkiRJY8xkQv1mVeAnwMHAUz2ORZIkaaCZTKjf/BiYAFyamVN7HYwkSdIgM5lQv/kosDDwgYh4rE7LzHxWD2OSJEkaSCYT6jd3U9pISJIkqcdMJtRXMnNir2OQJElS4TgT6isRMX9ETIqIiyLirxHxxYiYv9dxSZIkDSJLJtRvvg18HPhfff8KYEngk70KSJIkaVBZMqF+sxVwFLAIsChwNPDeXgYkSZI0qEwm1G8WBq7LzCcz8wngX3WaJEmSxpjVnNRvzgO+HhFvpfTqtAFlVGxJkiSNMZMJ9ZuPAksDr67vzwM+1rtwJEmSBpfJhPpKZt4GvDYiFgUiMx/udUySJEmDymRCfSEiTgG+Bfy/tulQRsB+ey/ikiRJGmQmE+oXbwGOr/+2c0RsSZKkHjCZUL9YBZhS/5UkSdI4YNew6guZeXNmPkoZY2KV+v5mYAKwd2+jkyRJGkwmE+o3G1MSiJZXADv1JhRJkqTBZjKhvhARX4qIpyntI06KiKfr+x8Cd/U2OkmSpMFkmwn1i7uAa4G1gNuAByiJxX3AAT2MS5IkaWCZTKgvZOYhwCERcRRwSGb+rdcxSZIkDTqTCfWVzNwhIv4vInYBFmpM/0EPw5IkSRpIJhPqKxHxBWBSh1kmE5IkSWPMBtjqN7sAv6t/fxO4Cvhu78KRJEkaXCYT6jfLAqfWvy8HDgbe1LNoJEmSBpjVnNRv7gb+B9xPKZFYsL4kSZI0xiyZUL/Zn9It7JeBFYFlgK/2MiBJkqRBZcmE+s1FwD8y8+6IOJySEC/R45gkSZIGkiUT6jfnAK8DyMxHgTcDt/Y0IkmSpAFlyYT6QkS8FtgYCOA9EfHCOuu1wNRexSVJkjTITCbUL14HfAlI4N311fKHnkQkSZI04Ewm1C9+BlxT/90f+DMlsbgPuKB3YUmSJA0ukwn1hcy8Frg2IlYBptT2EpIkSeohG2CrL0TENhGxR2beDDw7Ii6MiIci4s8RsVav45MkSRpEJhPqF18Anl///hrwSkrD6/WAH/YqKEmSpEFmMqF+sRJwRf37zcDjwKrAPsDLexWUJEnSIDOZUL94ElgtIjYBlgYuzMz7gAcpDbElSZI0xkwm1C/+AOwF/J6SPJxYp78KuGE0G4iIeSPisog4dc6EKEmSNFjszUn9YhfgNmAN4PzMPDwi5gcWBA4Z5TY+DlwLLDFnQpQkSRosJhPqC5l5P/DJtmlTga1Hs35EPI/S1uLr7duRJElSd6zmpEGxP/BZ4H89jkOSJGmuYTKhuV5EvAW4KzMvGWG5XSLi4oi4eMqUKWMUnSRJUv8ymdAg2BB4W0RMBk4CNomI49oXyszDMnO9zFxvwoQJYx2jJElS3zGZUF+JiBMiYvOIiNGuk5mfz8znZeZEShuLszPz/XMsSEmSpAFhMqF+sxVwOvCfiPh2RKzd64AkSZIGlcmE+s1zgF2By4GPAZdHxKUR8eGIWGCklTPz3Mx8yxyOUZIkaSCYTKivZOY9wFHAj4G/AgG8BDgQ+EUPQ5MkSRo4JhPqKxHxfeB2SuKwJvBN4PnA7sDmPQxNkiRp4DhonfrNnsD5lFGvf1kHriMizgC+0cO4JEmSBo7JhPrN2pl5TfvEzLwV+HIP4pEkSRpYJhPqCxFxSuPv9tmZmW8f24gkSZJkMqF+MVwPTDlmUUiSJOkZJhPqF6v0OgBJkiRNz2RC/eLZwA3AqkPMv3kMY5EkSRImE+offwe2AU6ic7Wmecc2HEmSJJlMqF8cC0yu/9pGQpIkaRwwmVBfyMwd6p9/62kgkiRJeobJhPpKRCwKfAxYG1ioTs7MfFfvopIkSRpMJhPqN4cD76VUdWoNOGG1J0mSpB6Yp9cBSDNpU+CH9e/3Ar8A9u5dOJIkSYPLZEL9ZjHgSkqpxJKUXp4+0suAJEmSBpXVnNRvbqMkFDcAh1CSilt7GpEkSdKAMplQv9kNeBi4HNi3Tvt8z6KRJEkaYCYT6jfnAasDDwKvycypPY5HkiRpYNlmQn0jIvYB7gOuAq4G7o0IG19LkiT1iMmE+kJE7AJ8hVKa1kom5ge+EhE79jI2SZKkQWUyoX7xIWAysEZmviwzXwqsUaft2sO4JEmSBpbJhPrFC4AfZubNrQn174PqPEmSJI0xG2CrXywGzB8R67ZNX7DOkyRJ0hgzmVC/mAf4Rn01BZBjH44kSZJMJtQvjul1AJIkSZqeyYT6Qmbu0OsYJEmSND0bYEuSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEJEmSpK6YTEiSJEnqismEBkJErBgR50TEtRFxTUR8vNcxSZIk9bv5eh2ANEaeAj6VmZdGxOLAJRHx+8z8R68DkyRJ6leWTGggZOYdmXlp/fsh4Fpghd5GJUmS1N9MJjRwImIisA5wUdv0XSLi4oi4eMqUKT2JTZIkqZ+YTGigRMRiwC+BPTPzwea8zDwsM9fLzPUmTJjQmwAlSZL6iMmEBkZEzE9JJI7PzJN7HY8kSVK/M5nQQIiIAI4Ars3M7/c6HkmSpLmByYQGxYbAdsAmEXF5fb2p10FJkiT1M7uG1UDIzAuA6HUckiRJcxNLJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJjQwIuKNEXFdRPw7Ij7X63gkSZL6ncmEBkJEzAscBGwBrAVsExFr9TYqSZKk/mYyoUGxPvDvzLwxM58ETgLe3uOYJEmS+tp8vQ5AGiMrALc23t8GvLK5QETsAuxS3z4cEdeNUWxzwjLA3WP6iRFj+nGzydjvp/7kfhod99Po9PN+WrnXAUjjjcmEBkWnO92c7k3mYcBhYxPOnBURF2fmer2OY7xzP42O+2l03E+j436S5i5Wc9KguA1YsfH+ecDtPYpFkiRprmAyoUHxd2D1iFglIhYAtgZO6XFMkiRJfc1qThoImflURHwUOBOYFzgyM6/pcVhz0lxRXWsMuJ9Gx/00Ou6n0XE/SXORyMyRl5IkSZKkNlZzkiRJktQVkwlJkiRJXTGZkKQ5LCLeFBFf73Uc0ngVERN6HYOk7phMSOpKRH+OUjfWImJz4GvAab2OZTyLCDsEGVAR8Rbg1xHx7F7HImnmefKWNCoRsQnwfODEzHwkMzMi5s3Mp3sd23hVE4njgK9l5l/qtEh7vphOROwPPCsi5gcuAY7OzPt6G9X4ERGfpQyyuQxwCPDfzHy8t1HNHvU3si/wwcy8x9+H1H8smZA0oohYENgT2A/4eER8o170TSSGEBFvo9wknQMsGxEbRcR83ihNLyKOpiSp3wIuAlYFfulT6iIiTgA2Ae4A1gC+DmwXEYv3NLDZICI2A44GbgX+09toJHXLZELSsCJiVeBp4HjgXuA6YHlKtYQdImL1XsY3HkXEEpQbwA9n5lZAAO8G/i8i5u1pcONIRPwfsGxmvi0z/5mZBwJ7A1cDB0fEQr2NsLciYmdgqcx8Y2Yel5lbUpLTlwMb1mX6srphRLwJ+B6wF3Aq8MWIeKnJttR/TCYkDale8A8FlsvMnwInAfNk5vaUJ4lfAc6IiE9FxBq9i3T8qNU2vgx8MTMvrJO/DDwIbAW8yoTiGUsAz4JpN8WZ+QCwP/AIsEjPIhsfErgUoFUSkZmHU0optqvv++7mOyKWAhYGds/Mo4DzgduBXSLiJT0NTtJMM5mQ1FGtgvBN4BOZeVtEzEO5idkwIl4MvAF4f32tBQx8HfeIeCPlaevfKaU51KpNTzAtoXgXsNEgJxSNG8bLgBsjYmLrprhWn7sRmAgMZA8/tWQLYH5gTYDMfKi2KYFyjC3bj1WdIuLNwBnAFZl5AUBmXgn8mpJQ7BoRa/cuQkkzy2RC0gzqTfFxwMTMvBogM/8H/BDYDLgc+GRm/ikz/0p5wnhXr+IdDyJiNeAbwK6ZeQLQaiA7P0BmPkkpyQHYHFhgzIMcByLix8DOEbE8JblaGNizdQPdeNI+D7BbROzWm0h7IyIOBbaJiAWAY4AXRMQXADJzamPRh4G3R8RLexBmV2qp3TcpHRL8uzmvnmd+C9wGfDoiXtSDECV1wWRC0nQiYn1KY9iNgR9GxA21WgKZ+RSlTvvhmfnbiJivPkl+sncRjxsPUhoQXxIRywCfiohfA3+JiG0iYrFaQvFZ4LuZ+VgPY+2JiDiM0gZgD6b1SLQrpWHxNyPiwxGxekT8knJ9egA4u3cRj62IOILSHulESl71KPAh4DURcUBELFNLI34CrATsRGnHNK5FsQiwPaX636kRsXhELB8Rm0bEC+CZEoozgCuBe3oXsaSZEX1Y3VLSHBIRE4HXA3/LzKvqtB8CbwTWy8z7I2It4DeU0og/9CzYcaY+aT+C0nh4W+APTKvutCOwTfvT2EESEc8H9svMt9f3qwLLAksBfwa2ATYCHgMeqQnHwKhjLeyemW+u7xen7JsFgScpXcL+j5Jk3Z6ZH+q3rpnrwI0PA7+i9A63HPBS4FzglMz8VV1uAR9QSP3DcSYkAc/czHycUgXhqtYFPTM/GhEHUp64r5eZ/6g3Bbf1NuLxJTNvj4jPUNqP/BP4aWY+DBARG1O6Px3YZIJyvVktIp5DSU7fQNknywGXZ+Y7gUMjYv5WdZ6ImKdWrxsEzzQ4j4i3U5L6LSlVCv+cmW+KiCWBRTOz1Y1qvz0NvAzYFLgQ+AVwMOW3shulpAV4pkqgpD5hMiGJiNiC0n/9pzLzTzD9BT0z94iIp4GbamPZo3sT6fjU6InoakrJRHPe+4AXAdf2ILRxIzP/FRGnAL+jPHH/CvCtmrheGRGbZ+aZjUQiBiiRgHLcXBURl1D2z4HA7pSqXh+PiOdk5p3A/dBf+6fGmsDJwJnAjzLzstb0iHgceH7jd9RvSZI00EwmpAFXL+CvB/bKzD/Up58rUJ6w35KZFwFk5p4R8SRlFN77exTuuBAR6wKrA9dQ9tGDHZZ5AaWx+u7AVpl569hGOX60Shgy8/O13cQDmdms638r8GhznUG5oWxVVcrMKRHxFWAdSgnWbZk5tf4elwIWA+5srTfe909EvAKYLzMvrAlDK/l5iFJCQZ2+A/BOYOvx/n+S1JkNsKUBVy/gSwPvjIgJwA+A7wIfA86KiHc1lv3sINf7h2eqg/0EeBswCWjVcW8fPOxBymB178jMa8YyxvEmM/8XEfPVv2/KzHsjYuHagP9E4I7MPL/HYY6piHg/QGY+3dg3d2fm7+s+mlq7Yz4I+Hdm3tDLeGdGRGwJHAYs3CxtaP5GImKFiPggpe3E+zLzn72IVdKsswG2NMAa1QyWpIxCuwylMewJmfnHiNiW0qvTrj41fGZ8hBOBD2TmJRHxIWBrYLNOVU4GrM7/MyJid8rT9KUoVVsuycwnm/sjysjp3wHuy8wd6rSB2F+1G9yLgTNbDc2bjalrcrE6sC9wb2P/xHj/HUbEssDPgc9m5kX1//J0e9w1sViTUkp1ew9ClTSbmExIA651ExNlELXnZ+b1jXmfolzwdxnvNzFjoZbcvDUzj2xMOwP4aPPJcT/c9M0ptXvT51J67NmcUq3lJkr7iCfaln1J7Q50YBKJltoQ/VfApZn50TqtmWwtD7wsM09vnzee1d/ICZQSu2WBb1Mait+cmXvVZfqqFypJw7OakzRgIuJVEfHW1vuaSMxT621fX5dZqJZKbE3pznMgb4xbImKViFguM6cAx9dp89VqKIsBz6rT1oyIJQZ1f9VEYvHMfFNm/jgz300p8VqJMlBd1OVaVV9aiUTfNCaeFRHx2YhYOyJWqo2p3wm8KMpAda3qYPPWv2/vt0QCoP5GrgI2BL5K6bnpu8AbIuLbdRkTCWkuYjIhDZ4VgQMi4s2tCc0blYhYkDK41GeAHTLzH2Me4TgSZSTeKyg3wys1nq7PW/fbXcAdEfFOymB/A9mxRZTub18C/LRt1m8p4228spVktSdbg5B8RcSbKNWWTgBOrqV+a1ESirWidLf8THLfXHe8JxIRsUFEbBcRG9RJtwJfo4yxckRmXsa0xGmRXsUpac6wmpM0gCJiK+ALwN6ZeUqH+YsDi2XmHWMe3DhTb35+TxmJ+UHg55k5uTH/AMqT9xWAnbIO9jdoImIxyojMK1DaSPy0MW954G/AFgO8fxYEPkFpC3EpZaTrVYF5gf8Ae1BKAT/dsyC7EBFvoyQOlwGLA5/IzJsjYhJl8MZdKe2wtgR2plQTfLw30UqaEwbyCZo0aCJic8oIw2cDv8rMn0XEvcD+EfF0Zp7WWDYy8yFKXXeVp6u3UEZmXgHYLCKuBx7LzL8Cq1BGbn75oPZ0FRHzZebDEXEkZbTvDaKMS/KbLONGPACcD/y3l3H2QkSsBiySmVfWaj5foJQOnpaZ59fewZYFrqdUmesbEfFs4CPAtpl5df3+XxUR92XmpIi4E3g35ZhYndL2ykRCmsuYTEiDYT3KRX1jYKuI+DfwS8rAWF+OiMcy82wYjCono1Xrqj8RERcC51ISrO9Sqqt8sC62F/DUICYSEbFpZv4hM5+qCcVDjYTi1ZRRnc8ADgceqfXpB0ZEHEvpdnn1iLgI+Fdmfjki9gG2i4gngNNrW4nTajuKfmrA/xSwMLBmRNxCOb9MALaMiKspA2EuSenV6/GcNnK3pLmI1ZykuVhEvBh4EriRUt1gBcoT9r9SnpCeT2kbMQ+wZWae2qNQx7XaBex8lFGKTwIuoZTy/Dozb+5lbL0SESsCNwMfz8wD67T5amKxBCXZWoUycN+fM3PXuky/3CjPkoj4MTAhM7eMiOUoVeG+DFyVmZ+NiC9Sbrx/A5zd6MWpr/ZPRLwb+DwwlVLa8tWI2ITS7uq7rUb2kuZeNsCW5lK1rv+WwFeAlYHjgNuBicAdwCaUp+xfoIwF0DeDYo2VVq9DlAbEbwCOBXYBvgksBzzco9B6qt7w3koZrfmLEbEHQE0kFs4yIviRwH3ATxuJxDz9dKPcrYhYlFJlqTUw3X8z82+UdhFr1GqH36Jcg5drNrDut/2Tmb8ANqU8mGiNbH02sCjlXCNpLmc1J2kulZmPRsTJlDr/+1CqHBxN+d1/gnKTdxbwrdYT5Z4F22PDPA0OSh/5kym9Nn04M39X17k6MwcumYiIBTLzSYDMvCIi3gCcHRFk5oGZ+Vhd9MvAOa32OP3Uvels8CQlgX89peSh5SZKz2CvzMwzI+Ljc8PvLjPvi4izKVUonwQWopRKWSohDQBLJqS5TESsX3tronbrejil1GEvSg8yh1OeIO4YEa+vy/X9Dc0sWrLTxFqXfVPgG8Bemfm7xjgAg5hIHAX8PCJ2bk3LzMspN81frtXBWgP5rdZIJAZlHIk9I2Lb2uj8bGC1KCNAt5KppymlXEvVffJUnRdDb7VvXEg5r+xNaZS9Q7PXM0lzL5MJaS4SEUsBpwAnRcT+EXEMpaeYiygX+89RGkMeB5wDDPQYEgAR8Tzg+FZi1TZvRWAScG5m3gcDP+DWzZTuP98ZEb+LiPdExKp1HIFNgG9GxMPAPZm5JfRfG4BZ9CjwvjrmxlHA+yjjkyzVSKY+BDzQ3Cdzw/7JzPsz8wfAW4D3ZOYVvY5J0tiwAbY0l6g3dTfUaic/Bg4CngA2oPQoMwV4HnA38FHgrrnhJqZbrZvciFiG0m3upsD3M/NPrfnAc4EFM/OmHoY6btRj6/8BbwPeBKxJuWH+BOVJ/HOAz2Tmx+ryA1G1KSI+DZxVu3/djjK+wpcobWoOplSTC2AZ4O7M/OBQ25KkfmPJhDQXiDKa9eERsUpm/h7Yk9J701+ZdrN3K6XHlQ2AgWgIO4JnA2Tm3cBhlC5MPxMRG9XpmZm3AytGxCq9C7O3ImL+1t/12LqFUuXrF5R2AfNSem46C1h+ABOJRSiNrb8XES/MzJ8AJ1I6PliC8qT+B8AFwFGtRCLaRrmWpH5lyYTU5yJiM+CrwBdro85FM/ORiHgPpceYPTPzlNbNXURMGLT+/ttFxBaUKl+3UZ6onwDMD2wNvB34TmaeGxGtnpvWHcQuYCPia5TSrPMpI38/GBHrUkpyVqF0fbpR7Qq2Vd1p4NSE4qOUHr8+npn/iIgPAO8FDs3M37YtPxCJlqTBYG9OUh+LiPWB3wEbZObfImJVyhPSz2TmzyMige/W3ppOrqvd3bOAx4GIeCulkejnKYP5rQ/8JTOvrb1fBbB7TcY2ATYZ0ETiEEr1uN9QEi+AIygjNb+AkmCtWKc/3EokBqWNRETsC9wPnEZpe/Q9SpuJH0TExzLz2Pr72zsibs/MS1rrmkhImptYMiH1sYhYgTKI2pmUutknU0bU/XZjmfdSbpw3zMxHehLoOBERiwHXAr/NzA/XaQcC12bmwY3lPkmpGvbW2lvRQImIPSkJxGqZ+XBEvIZSbeedtRvQlSnH2z6DWBoREatTRkRfiJLML09pp/Rw/fvtwG6ZeXNEbJiZf+5VrJI0p5lMSH0oItamdGf6T2BBSmPrLYDdM/OIRpWmV1BGa17YRCLeSGkAexul+tePMvPIiPgJ8CJKA/V/Aj+jdKX7eGbe36Nwe6omD++g9Mr09dpL2PmU/fMXSvubLYDjM/OPvYt07EXEKzLz7xHxKmBf4ABKj2kLAjtS2iltBVwHvLm2yRmYEhtJg8dkQuoztb7/tymjC/8b+BWlf/ejgUsz87N1uR0oDWO3zsz/9iba8aGOOLwv8NHM/HNEvI5SLeV+4BFKv/ivoSQVGwJvH8REIiKOpSQLP6KMHfEmSkcdG1KewN9AqRr2MuDfmbl9TwLtkYh4NaXE5phajfAtlM4OflDbJa0ArAFsT+n+dY+eBStJY8RkQuoj9en6YZQeme6iVF9aJTN3rDcyRwCXAn8DPgvskplX9yre8aAmEsdQeiA6sjH9dcCxwNcy80eNrmIXz8yHehVvr0TED4FlM3OrxrRXUW6Wn5WZm9dp81KuHc8MuDZIT9xrkr4xcGojofg0cAjws/Z9MWj7R9LgsQG21F9WpFSnWCIzb4+Iw4DjIuK5mfmfiNiJUlLxEeD/soyAPbAi4m3A14ArgSUj4qWtwbQy85za486+EbFgHXALSr33gRIRBwFrZOam9f1HgEcy8+iIWBDYIiImUZ7A39tYbyBulCPieZl5G0BmHlUHrH5bRFATinkobWwWiIifZeYTdb2B2D+SBpv9XEt9JDN/TOmJ6KcR8RJKdYr7KaUUZOZ/gC2Bl5hIxLOADwA7UwZZWxN4V21vApSEAvgi8O6IeNYg3vxFxHKUfXNyfb87ZWySc+oi51Ia+E8ENmquOwj7qpYGnth23BxF6VL4bbUNxSnAkcDzWolEXW6u3z+SZDUnaZzrNC5EHf/g68DkzHxFnTZvZj7dixjHm4hYj/KkeLtWN5wRMZFSLexOypgJVzWWXyQzH+1FrL1Ub5T/Qunq9aOU3onWBN7YbGdTRwN/fmbe0JNAeygilqeMaL0hZSyX5nHzJWAz4DV29yppUFkyIY1jtT72ryPi2c3pmXkYpSHoQhGxVmvyWMc33tSbXigN01ejNCQGIDMnA98AngO8MyLWacwbxETixZTB53aldJe7H2Xgvl/SqOoVEWcBO7cSicY+HghZRkH/CfBn4KvNEgrK8fQvYIFexCZJ44HJhDRONXog+lhm3hMR89S62a2qKT+j3ACeWata+GS0ntNqT0xvAFaLiGNaM+vgc9+gPIl/Y0QM7E1gbZh/AmVgug9TujL9OmXfbBsRy9V9d2NNXlvrzfVJa0TsV7tVBiAz76QkFBcA34yI/6uzjgWmZubjPQhTksYFkwlpHIqIzShdvd4K/Kc1vY4d8TpK70RL196J9gHu6UWc40lEbARcHBEfiIhNMvNB4J3AErXLU+CZhOJzwFGZ+WSPwu2ZKKOkA5CZZwJLUdqW7EFJKA6gdJN7FvB0Zu5W1xuI60VtjL5SZv69vp8Pnkkofkrp4ODEiDgJeCwzd6nLDVSJjSS12GZCGmci4k2UQdW+DyxCGfvgR5l5Ra3udCzlRvgXPQxz3Kk9EH2V8vR4TcpN32OU/fVz4KzM/HzvIuy9mnD9FNgyM/8aEbtRGlsfDqxFGbjvEErpxGsz84C63jyDUPJVe0fbEtgkM6+OiPkzc2qdtxdwVWb+NiJWpAxqOKXOG4j9I0mdmExI40gdaXgT4M7MvKD22PQ24LnAoZl5VUQsl5n/HcSehzqJiHWBRTPz/Ij4BKVNxBWUQf3eTknIVgFeDXw9M7/Qs2DHgdp4/0OUhtdrA9tn5q01id0MeAD4ZqvqzqDcKNdEYhVKL03LAMdl5mV13ucpI4Jv2EouGuv5O5Q00Aai2FrqBxHxZuAM4IrMvAAgM68Efg3cDuwWES9u9bLjDcwzpTjHA6+KiOdTquhMBdYHHs7M3Sk9OH2JMqDfcb2Kdbyo7R9+TGl4fVBNJObJzNMp3cFe32wDMCCJxIbAszPzDZR2JPcDH6rJPJTucTfMzKl10L5n+DuUNOgsmZDGgdrY+juUUZpP7TD/JcCbKdV3vp2Z14xxiONORLyWUj1nx1byVafPQxk74rmURONvmfn4oHadGxH7ASe02gA0pu9CSSg+3tx/jfkD8cQ9Ir4PnERJ4luDzb2YUqq1PHBw6/c2qMeQJA3Hkgmph6JYhDL43Bcz89SIWDwilo+ITSPiBfBMCcUZlJGcB76xdbU25UbvgtbT4lrH/X/AV4CbKDfLrV555von7O06NCZuPlU/BjgQOKgmZtMZkETix5Q2SbcAT7Wm156ufkvp/ODDEfHyOt1EQpLazNfrAKRBVm/YHo2IG4EXRsQ/gT2B5YCXAudGxCmZ+avMvDwi/jGIPRANYV5KQ2GYNsbGU7VXnZdm5r4R8SngehiMm+OmZmPi+r7ZmHhv4MrMPLq209kcOK9XsfZCbXy+XGZu3pi2NPBkZj6cmVdGRFIaqL8YuKRHoUrSuGbJhDQ+XAasDFxIuUk+GNgIuANYqbWQicR0bgGeW6ue/K/W+8+aNGwdES/PzO81R3IeFI3GxPsBO0TEOo1E4vOUKjxnAGTmfpm5d8+C7Z1HKF0vExFvjIivApcC342I9wPU0a4PzMxjht6MJA02kwlpfDgZ+AylS8qdgd9n5i3A48Dza3Uo+7FvyMxfU3pqOj0i5m9Nj4j3AVsAd/UotJ6aicbETzWrPQ3g8XUTZQT5syndMD9JqR53DaVB/0IAmfkfGMj9I0mjYgNsaYxFxJKZeX+rgetQDV0jYgfg48DWmfnPsY90/IqIBVqlNBFxBmU8iceAG4F3A++p9d4Hio2JR68mUi8DXkkZm2RyZj4YES+kjPOyXWY+0MMQJakvmExIYygi1qM8Gd40M/86xDIrAJsCnwS2HfSem+rN3VLAEsC1dQRrImLBxg3zpsCKwNPAhZl5fa/i7ZXamHgl4IPAlGaiUEsl3gKsAByZmQNZ/3+kBL4ucwJwT2buMcbhSVJfMpmQxlBEvA44Hbga+MRQXXJSuoB9IDNvH+MQx5U69sY3gT8Dr6Lst4szc786/5lGxYOsNiZ+c2a+tTHtmcbE9f3alMbE1w5aG4DahuT4zPzTEPMXBFYFvk0ZMHKnOn0guseVpFlhb07S2LoA+ALwIHBMHV/iwcx8pn5/vXm5tkfxjRt1QLpJwO6Z+eeIeA6wIbBjvcfb30TiGdM1Jqbsp+2A30XEBZl5XJbR0w9stQEYFBGxEvAu4BURsVtmXtRhsSeBhYBfZuZRdb2BGPlbkmaVDbClMVIHU1uM0lXnqZRqTH8CboqIVWzgOU1EPA/4HvC7zPwzQGbeCZxJGR9hnYhYtochjjc2Jh5C7cjgR5Sub0+IiPU7LJOZeamJhCTNPEsmpDkoIl4ELEMpabg7M++LiN8Az6J0QzkvcC+woNUppvMkcBCwekS8KzN/CZCZj0TEX4F9KVXBBrLHpg4upDRA79SY+A3AgpSewYDBGXOj0ch8XuBISvJ+bETcRCmFOLzTeiYSkjR6lkxIc0hEbAGcCHwCOIrSmw7AE8DPKTc27wX2Ao6vI2EPtIiYUNtB3EXp1vQa4I0R8Y7WMpl5K3AOJQkbWK3ShVqv/+nMvCQzD87MKzPzwbrYF4CbB7FXolq60GqE/mdgi8w8GfgvsDHw717FJklzE5MJaQ6IiI2BA4APZeaWlCftL6yzj6fc3HwyM/+UmT+h9O70aA9CHTdqY+ufA7+vY0U8ApwC/A14UyuhqPPWAe7uVay9FBGHRcRGrdKF9lKGiFgwItaKiFOBx1q9Eg1K1aaI+GIdsPB/jXE0bqWMMH8A5bf4SeBXteRGkjQL7M1JmgPqTcpymXlORCxHqdL0N2AKJZH4dR1rYt7MfHrQe42picQkYBdKr02vA75cGw2vALwZeBFlkLqXADsN6DgSK1FGS78F6NiYuCYN6wAvHbQ2ABFxKPAOysjxu2Tm3xrzfgNMADbKzKkR8frM/GOPQpWkuYbJhDSHRcTelN/a1+pAdJsDe2bmf3sc2rgQEUsCZwHXZ+b76rQvUZ4g75+Zj9UGxLsB2wI7DmIi0RIR3wAWpYwbsU3zhnmI5QclkXgWsA9wMPBaSunDzq39U5P6u1olFq0qUIOyfyRpTjGZkMZYRJwO7JOZl/Y6ll5r3cjVamE7Addk5r4RcTTwYspN8y+BK4DfA2Tm/T0JtsciYr7MfCoivkVpT7Iq8A1KT05DNiYeJBGxKPBUZj5Rx97YHfhwq0cwEwdJmv1sMyHNQe311CPiXcBzgIEejA4gIl4N7BARa2fmucBhwEsj4iJqdRTgq5QqK18C5h3ERCIiVqjV4J6qk/6CjYk7ysxHWqOiZ+ahlGPqgIhYt5bozNAtrCRp1phMSHNQqx1EbRS7E6Xv/w8OehWnOrDagcBTlK5zobQpORh4GvhLvTE8ITMPAtbNzHt6E23v1DYAh1AGOGw1Fr4NWMvGxMOrpRAHAYcCFwNrZuZfexyWJM11rOYkjYGImJ/S3/8NmXldr+PppYjYCDgCeF+zAXFErJGZ19USi48AN2XmXnXewDVQj4gjKYMcvp/SxfD5mbl/nfczYCXgNTYmHl5E/IrSq9W29f3AHUuSNCc5aJ00BjJzKnB6r+MYJ9YBDmxLJL4D7BgRe2fmoRGxALBdRDw7M+8ZtJu/iFgRCGDb2k7iOuA1tRHxH4HPZeaNddl5W4mEbQKmFxHLAOdl5n71vftHkmYzkwlJY6LxRHhV4IHG9C0obSTeCpwYEbdm5mkRcWFmPtajcHsqM2+NiJ1q4/TNgA9R9s/GwLuAo4EbW42yG+t5o9yQmXcDJhKSNAfZZkLSmGiULvwaeGVErFvf/4EyJsBfgB8Dz6rLD2Qi0dK68c3Ms4C1MvOizPwWsDBlzA2aiYSGZyIhSXOGyYSksfZXysB9W0fE+pk5NTOfjIhtgC3qfDFdb2DNxueLUxqpS5LUczbAljTm6qjWOwGbUEZ0fgx4N7BlZv6jl7GNV3UMhROBKZm5U6/jkSQJTCYk9UhELAysS+nl6j/AuZl5fW+jGp9qb2Cvo4wv8Yk6zTYAkqSeM5mQpD7QTB5MJCRJ44XJhCRJkqSu2ABbkiRJUldMJiRJkiR1xWRCkiRJUldMJiRJkiR1xWRCkiRJUldMJiRpHImIiRGR9bVPY/qRren1fQ7xOrfOf0tj2mbDfN7KEfG7iHgoIh6MiCsi4vV13qsiYlJEvGyUse8VEXs23m9cP/+HXe0MSdK4N1+vA5AkDWmHiPg6sAjwnrZ527SWATYDvgr8A7irTt8KaPX9/V7grCE+Yz9gU2Bv4F5gfeDZdd6rgC8Bk4HLRxHvXsDdwP71/T9qnP8axbqSpD5kyYQkjU83As8HNqYkA/NTRgoHIDNPysyTgNao4WfXaWdHxILA24G/AhcB76ijaHeyJjAVOCMzf5yZO2fmzyJiY+A7dZmjagnDxIjYPyKmRMQTEXFjROwKUEtEFgVWrsseDawFnAjsWJd5UUT8sZaC3BwRX4iIqPMyIq6PiKMi4oGIOCsiFomIeSLi0Ii4NyIei4h/RMQms7pzJUmzh8mEJI1P11ISgR3r69fA/aNc943AEsAv6msp4A1DLHs+sBBwRUTcHhEHRcTSlFKF4+syh1JKGKbUuPYGPg3cCRwUESsDXwGeoJRMbAMc0vyQmsycAryyrn9lXWeHxmKr1c+4sMb7LuClwK7AOcCHgd9gqbokjRsmE5I0fh1Jqd60IXDUTKz33vrvJfUFpdpTJ3sAn6UkLstSbtgPycy7mFa16aJa6vEIpbRkP+AHwAbAvMALM/Ns4CngkbrsRW2fs0Zd9zeZ+QPgk3X6Fo1l7sjMzwJH1/cTgduBR4G1gZcDV1ESC0nSOGAyIUnj10nA08BtwO9Hs0JELAS8tb49l2k33ltGxAKd1snM72TmBpQb/gRe3JrVtu01KYnHv4B3UJIdKCUbMyw/hOGWubf++1T9d97MvBN4EXAwpS3H8ZR2HJKkccCiYkkapzLzwYjYEXgoM/9XmxeM5M3AYsARwKl12lspVaU2B37btvwfI+Jq4FJgJSAoT/8B7qv/bhERjzamLww8h9Jwu+k+YEJEfBD4e9u864AbgLdHxB6NdU8f7j8TES8A9qSUsFwEbA0sP9w6kqSxY8mEJI1jmfnTzBz2hrtNqzrTIZn568z8NfCjOu29HZY/E9iI0gPTHsBplPYQUNo4XEJpu3BCZl5LqeK0PPAh4Iy2bX0beJJSTemdbf+PqZRG4X8HvgGsA3yRaVWahvI4pXrT/nW9vwDfGmEdSdIYiczRlEpLkiRJ0vQsmZAkSZLUFZMJSZIkSV0xmZAkSZLUFZMJSZIkSV0xmZAkSZLUFZMJSZIkSV0xmZAkSZLUlf8PtkbFWBfK9yoAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 504x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Station with traffic\n",
    "fig, ax = plt.subplots(figsize=(7, 5))\n",
    "\n",
    "ax.bar(x.STATION ,  x.DAILY_TRAFFIC , color=['red','lemonchiffon','lemonchiffon','lemonchiffon',\n",
    "                               \n",
    "                                             'lemonchiffon'])\n",
    "plt.ylabel(' Daily Station Traffic',fontsize=10.0,weight=\"bold\")\n",
    "\n",
    "plt.xlabel('MTA Stations',fontsize=10.0,weight=\"bold\")\n",
    "plt.xticks(color= 'black',fontsize=10.0,rotation=45)\n",
    "plt.yticks(color= 'black',fontsize=10.0,rotation=0)\n",
    "plt.title('Top 5 MTA Stations In Three Months Based On Daily Station Traffic   ',fontsize=20.0, weight=\"bold\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "a2a808bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Font family ['Helvetica'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#day with daily traffic\n",
    "fig, ax = plt.subplots(figsize=(10, 5))\n",
    "f = {'fontname':'Helvetica'}\n",
    "# Create bar plot\n",
    "ax.bar(mask_two['DAY'],mask_two['DAILY_TRAFFIC'] , color='green')\n",
    "plt.ylabel(' Daily Station Traffic',fontsize=10.0,weight=\"bold\")\n",
    "\n",
    "plt.xlabel('',fontsize=10.0,weight=\"bold\")\n",
    "plt.xticks(color= 'black',fontsize=10.0,rotation=45)\n",
    "plt.yticks(color= 'black',fontsize=10.0,rotation=0)\n",
    "plt.title(' Daily Station Traffic In Three Months Based On Days  ',fontsize=10.0,**f,weight=\"bold\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6ecde88",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "9d359044",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#day with daily traffic seaborn barchart\n",
    "\n",
    "ax = sns.barplot(x='DAILY_TRAFFIC', y='DAY',data=sd, palette='Blues_d', ci = None)\n",
    "ax.set_yticklabels(ax.get_yticklabels(),rotation = 0);\n",
    "plt.title('All Days within 3 months eith Daily Traffic ', weight='bold',fontsize='15',loc='CENTER')\n",
    "ax.set_xlabel('Daily Traffic', fontsize = 15)\n",
    "ax.set_ylabel('', fontsize = 15);\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "36852668",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20f8982c",
   "metadata": {},
   "outputs": [],
   "source": [
    "sns.heatmap(sd.DAILY_TRAFFIC)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "f3f2cf44",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#daily traffic and station\n",
    "ax = sns.barplot(x='DAILY_TRAFFIC', y='STATION',data=x, palette = 'Greens_d')\n",
    "ax.set_yticklabels(ax.get_yticklabels(),rotation = 0)\n",
    "plt.title('Top 5 Staions within 3 months with Daily Traffic', weight='bold',fontsize='15',loc='CENTER')\n",
    "plt.xlabel('Daily Traffic',weight='bold',fontsize=15)\n",
    "plt.ylabel('MTA Stations',weight='bold',fontsize=15);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "dd425ee6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "c08de8a9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          index    C/A  UNIT       SCP        STATION DATE  ENTRIES    EXITS  \\\n",
      "1        210209  TRAM2  R469  00-05-01  RIT-ROOSEVELT  NaN     5554      649   \n",
      "2        210208  TRAM2  R469  00-05-01  RIT-ROOSEVELT  NaN     5554      649   \n",
      "3        210207  TRAM2  R469  00-05-01  RIT-ROOSEVELT  NaN     5554      649   \n",
      "4        210206  TRAM2  R469  00-05-01  RIT-ROOSEVELT  NaN     5554      649   \n",
      "5        210205  TRAM2  R469  00-05-01  RIT-ROOSEVELT  NaN     5554      649   \n",
      "...         ...    ...   ...       ...            ...  ...      ...      ...   \n",
      "2934477       4   A002  R051  02-00-00          59 ST  NaN  7592992  2595791   \n",
      "2934478       3   A002  R051  02-00-00          59 ST  NaN  7592870  2595762   \n",
      "2934479       2   A002  R051  02-00-00          59 ST  NaN  7592816  2595729   \n",
      "2934480       1   A002  R051  02-00-00          59 ST  NaN  7592804  2595713   \n",
      "2934481       0   A002  R051  02-00-00          59 ST  NaN  7592792  2595706   \n",
      "\n",
      "                  DATE_TIME       DAY   TRAFFIC           PREV_DATE  \\\n",
      "1       2021-10-01 17:00:00    Friday      6203 2021-10-01 21:00:00   \n",
      "2       2021-10-01 13:00:00    Friday      6203 2021-10-01 17:00:00   \n",
      "3       2021-10-01 09:00:00    Friday      6203 2021-10-01 13:00:00   \n",
      "4       2021-10-01 05:00:00    Friday      6203 2021-10-01 09:00:00   \n",
      "5       2021-10-01 01:00:00    Friday      6203 2021-10-01 05:00:00   \n",
      "...                     ...       ...       ...                 ...   \n",
      "2934477 2021-06-26 16:00:00  Saturday  10188783 2021-06-26 20:00:00   \n",
      "2934478 2021-06-26 12:00:00  Saturday  10188632 2021-06-26 16:00:00   \n",
      "2934479 2021-06-26 08:00:00  Saturday  10188545 2021-06-26 12:00:00   \n",
      "2934480 2021-06-26 04:00:00  Saturday  10188517 2021-06-26 08:00:00   \n",
      "2934481 2021-06-26 00:00:00  Saturday  10188498 2021-06-26 04:00:00   \n",
      "\n",
      "         PREV_TRAFFIC  DAILY_TRAFFIC  \n",
      "1              6204.0            1.0  \n",
      "2              6203.0            0.0  \n",
      "3              6203.0            0.0  \n",
      "4              6203.0            0.0  \n",
      "5              6203.0            0.0  \n",
      "...               ...            ...  \n",
      "2934477    10188925.0          142.0  \n",
      "2934478    10188783.0          151.0  \n",
      "2934479    10188632.0           87.0  \n",
      "2934480    10188545.0           28.0  \n",
      "2934481    10188517.0           19.0  \n",
      "\n",
      "[2444857 rows x 14 columns]\n"
     ]
    }
   ],
   "source": [
    "srt=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday']\n",
    "df['DATE']=pd.Categorical(df['DATE'], categories=srt, ordered=True)\n",
    "df= df.sort_values('DATE')\n",
    "print(df)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
